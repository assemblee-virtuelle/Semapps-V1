{"version":3,"sources":["web/front/src/mm-results/mm-results.js"],"names":["Polymer","is","properties","tabFirst","type","Object","value","plural","icon","typeSelected","String","tabs","Array","tabsRegistry","results","searchLastTerm","route","observer","attached","_this","this","gvc","domSearchResults","domId","domLoadingSpinner","$searchThemeFilter","$","GVCarto","ready","typeSel","each","entities","data","counter","push","selectType","tabRegister","component","tab","selection","searchRender","_routeChanged","_this2","prefix","window","split","path","search","term","building","_this3","filterUri","val","buildingSelected","searchLastBuilding","buildings","buildingSelectedAll","searchLastFilter","replace","searchError","noResult","style","display","complete","responseJSON","searchQueryLastComplete","ajax","encodeURIComponent","response","_this4","length","set","totalCounter","typesCounter","buildingsCounter","resultTemps","renderSearchResultResponse","error","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","result","inArray","allowedType","err","return","key","keys","resultsTitle","title","map","pinHideAll","pinShow","all","i","setTimeout","$$","classList","remove","log","add"],"mappings":"YAAAA,UACEC,GAAI,aACJC,YACEC,UACEC,KAAMC,OACNC,OACEF,KAAM,MACNG,OAAQ,OACRC,KAAM,SAGVC,cACEL,KAAMM,QAERC,MACEP,KAAMQ,MACNN,UAEFO,cACET,KAAMC,OACNC,UAEFQ,SACEV,KAAMQ,MACNN,UAEFS,gBACEX,KAAMM,OACNJ,MAAO,MAETU,OACEZ,KAAMC,OACNY,SAAU,kBAIdC,SApCM,WAoCK,GAAAC,GAAAC,IAETC,KAAIP,QAAUM,KACdA,KAAKE,iBAAmBD,IAAIE,MAAM,iBAClCH,KAAKI,kBAAoBH,IAAIE,MAAM,wBACnCH,KAAKK,mBAAqBC,EAAE,sBAE5BC,QAAQC,MAAM,WACZ,GAAIjB,MACAkB,EAAU,EACdH,GAAEI,KAAKT,IAAIU,SAAU,SAAC3B,EAAM4B,GAC1BA,EAAKC,QAAU,EACfJ,EAAsB,IAAXA,EAAiBzB,EAAOyB,EACnClB,EAAKuB,KAAKF,KAEZb,EAAKR,KAAOA,EAEZQ,EAAKgB,WAAWN,MAIpBO,YAzDM,SAyDMhC,EAAMiC,GAEhBjB,KAAKP,aAAaT,GAAQiC,EAE1BjB,KAAKe,WAAWf,KAAKX,eAGvB0B,WAhEM,SAgEKG,GAEPlB,KAAKmB,UAAUD,GAEjBlB,KAAKoB,gBAGPC,cAAe,SAAUT,GAAM,GAAAU,GAAAtB,IAET,iBAAhBY,EAAKW,QAEPC,OAAOjB,QAAQC,MAAM,WACnB,GAAIiB,GAAQb,EAAKc,KAAKD,MAAM,IAC5BH,GAAKK,OAAOF,EAAM,GAAIA,EAAM,OAKlCE,OAlFM,SAkFCC,EAAMC,GAAU,GAAAC,GAAA9B,KAEjB+B,EAAY/B,KAAKK,mBAAmB2B,KAIxC,IAHA/B,IAAIgC,iBACFhC,IAAIiC,mBAAsBjC,IAAIkC,UAAUN,GAAYA,EAAW5B,IAAImC,oBAEjEnC,IAAIN,iBAAmBiC,GAEzB3B,IAAIoC,mBAAqBN,EAGzB,WADA/B,MAAKoB,cAIPnB,KAAIN,eACFiC,GAAQA,GAAQ,IAAIU,QAAQ,8CAA+C,IAE7ErC,IAAIoC,iBAAmBN,EACvB/B,KAAKuC,YACHvC,KAAKwC,UAAW,EAElBxC,KAAKN,WAELM,KAAKI,kBAAkBqC,MAAMC,QAAU,OAEvC,IAAIC,GAAW,SAAC/B,GACdkB,EAAK1B,kBAAkBqC,MAAMC,QAAU,OACvCZ,EAAKV,aAAaR,EAAKgC,cAKzB5C,MAAK6C,wBAA0BF,EAC/B1C,IAAI6C,KAAK,uBACAC,mBAAmBnB,GAC1B,MAAQmB,mBAAmB9C,IAAIoC,kBAAmB,SAACzB,GAGnD+B,IAAab,EAAKe,yBAEfF,EAAS/B,MAIhBQ,aA9HM,SA8HO4B,GAAU,GAAAC,GAAAjD,KAEjBN,IAEJM,MAAKuC,YACHvC,KAAKwC,UAAW,EAClBxC,KAAKN,QAAQwD,OAAS,EACtBlD,KAAKmD,IAAI,aACT,IAAIC,GAAe,EACfC,KACAC,KACAC,IAMJ,IAJAP,EAAWA,GAAYhD,KAAKwD,+BAE5BxD,KAAKwD,2BAA6BR,EAE9BA,EAASS,MACXzD,KAAKuC,aAAc,MAEhB,IAAIS,EAAStD,QAAS,CAAA,GAAAgE,IAAA,EAAAC,GAAA,EAAAC,MAAAC,EAAA,KAEzB,IAAA,GAAAC,GAAAC,EAAmBf,EAAStD,QAA5BsE,OAAAC,cAAAP,GAAAI,EAAAC,EAAAG,QAAAC,MAAAT,GAAA,EAAqC,CAAA,GAA5BU,GAA4BN,EAAA5E,OAGc,IAA5CoB,EAAE+D,QAAQD,EAAOpF,KAAKiB,IAAIqE,eAEzBrE,IAAIkC,UAAUiC,EAAOvC,YACvByB,EAAiBc,EAAOvC,UAAYyB,EAAiBc,EAAOvC,WAAa,EACzEyB,EAAiBc,EAAOvC,aAGtB5B,IAAIgC,mBAAqBhC,IAAImC,qBAAuBgC,EAAOvC,WAAa5B,IAAIgC,mBAE9EoB,EAAae,EAAOpF,MAAQqE,EAAae,EAAOpF,OAAS,EACzDqE,EAAae,EAAOpF,QACpBoE,QAE0C,KAA7BG,EAAYa,EAAOpF,QAC1BuE,EAAYa,EAAOpF,UACvBuE,EAAYa,EAAOpF,MAAM8B,KAAKsD,MApBb,MAAAG,GAAAZ,GAAA,EAAAC,EAAAW,EAAA,QAAA,KAAAb,GAAAK,EAAAS,QAAAT,EAAAS,SAAA,QAAA,GAAAb,EAAA,KAAAC,IA0BvB,OAA6C,KAAnCL,EAAYvD,KAAKX,cAA+B,CAEtD,GAAIoF,GAAMxF,OAAOyF,KAAKnB,GAAa,EACnCvD,MAAKmB,UAAUsD,GACf/E,MAAoD,KAAnC6D,EAAYvD,KAAKX,cAAiCkE,EAAYtE,OAAOyF,KAAKnB,GAAa,WAGxG7D,GAAU6D,EAAYvD,KAAKX,aAGjC,IAAIsF,GAAe,EAEnBA,IAAiBjF,EAAQwD,OAAUxD,EAAQwD,OAAS,mBAAqB,uBAEzEyB,GAAiB1E,IAAIgC,mBAAqBhC,IAAImC,oBAAuB,qBAAuB,eAAiBnC,IAAIkC,UAAUlC,IAAIgC,kBAAkB2C,MAEjJ5E,KAAK2E,aAAeA,EAGpB3E,KAAKwC,SAA8B,IAAnB9C,EAAQwD,OAGxBjD,IAAI4E,IAAIC,aACRxE,EAAEI,KAAKT,IAAIkC,UAAW,SAACN,IACjByB,EAAiBzB,IAAaA,IAAa5B,IAAIgC,mBACjDhC,IAAI4E,IAAIE,QAAQlD,EAAUyB,EAAiBzB,IAAa,KAK9D7B,KAAKP,aAAauF,MAAQhF,KAAKP,aAAauF,IAAInE,QAAUuC,EAKxD,KAAK,GAAI6B,GAAI,EAAGA,EAAKhF,IAAIqE,YAAYpB,OAAQ+B,IACzCjF,KAAKP,aAAaQ,IAAIqE,YAAYW,MAAQjF,KAAKP,aAAaQ,IAAIqE,YAAYW,IAAIpE,QAAUwC,EAAapD,IAAIqE,YAAYW,KAAO,EAGpIC,YAAW,WACTjC,EAAKE,IAAI,UAAWzD,IACnB,MAGHyB,UAxNI,SAwNMa,GACFhC,KAAKX,cAAgBW,KAAKP,aAAauC,IACvChC,KAAKP,aAAaO,KAAKX,cAAc8F,GAAG,MAAMC,UAAUC,OAAO,UAGnErF,KAAKX,aAAe2C,EACpBsD,IAAItF,KAAKX,cAELW,KAAKP,aAAauC,IAClBhC,KAAKP,aAAauC,GAAKmD,GAAG,MAAMC,UAAUG,IAAI","file":"mm-results.min.js","sourcesContent":["Polymer({\r\n  is: 'mm-results',\r\n  properties: {\r\n    tabFirst: {\r\n      type: Object,\r\n      value: {\r\n        type: 'all',\r\n        plural: 'Tous',\r\n        icon: 'list'\r\n      }\r\n    },\r\n    typeSelected: {\r\n      type: String\r\n    },\r\n    tabs: {\r\n      type: Array,\r\n      value: []\r\n    },\r\n    tabsRegistry: {\r\n      type: Object,\r\n      value: {}\r\n    },\r\n    results: {\r\n      type: Array,\r\n      value: []\r\n    },\r\n    searchLastTerm: {\r\n      type: String,\r\n      value: null\r\n    },\r\n    route: {\r\n      type: Object,\r\n      observer: '_routeChanged'\r\n    }\r\n  },\r\n\r\n  attached() {\r\n    \"use strict\";\r\n    gvc.results = this;\r\n    this.domSearchResults = gvc.domId('searchResults');\r\n    this.domLoadingSpinner = gvc.domId('searchLoadingSpinner');\r\n    this.$searchThemeFilter = $('#searchThemeFilter');\r\n    // Wait global settings.\r\n    GVCarto.ready(() => {\r\n      let tabs = [];\r\n      let typeSel = '';\r\n      $.each(gvc.entities, (type, data) => {\r\n        data.counter = 0;\r\n        typeSel = (typeSel == '') ? type : typeSel;\r\n        tabs.push(data);\r\n      });\r\n      this.tabs = tabs;\r\n      // Activate first tab by default.\r\n      this.selectType(typeSel);\r\n    });\r\n  },\r\n\r\n  tabRegister(type, component) {\r\n    \"use strict\";\r\n    this.tabsRegistry[type] = component;\r\n    // Refresh selected tab.\r\n    this.selectType(this.typeSelected);\r\n  },\r\n\r\n  selectType(tab)  {\r\n    \"use strict\";\r\n      this.selection(tab);\r\n    // Render results.\r\n    this.searchRender();\r\n  },\r\n\r\n  _routeChanged: function (data) {\r\n    // We are on the search mode.\r\n    if (data.prefix === '/rechercher') {\r\n      // Route change may be fired before init.\r\n      window.GVCarto.ready(() => {\r\n        let split = data.path.split('/');\r\n        this.search(split[2], split[1]);\r\n      });\r\n    }\r\n  },\r\n\r\n  search(term, building) {\r\n    \"use strict\";\r\n    let filterUri = this.$searchThemeFilter.val();\r\n    gvc.buildingSelected =\r\n      gvc.searchLastBuilding = (gvc.buildings[building] ? building : gvc.buildingSelectedAll);\r\n    // Term and has not changed.\r\n    if (gvc.searchLastTerm === term &&\r\n        // Filter has not changed.\r\n      gvc.searchLastFilter === filterUri) {\r\n      // (maybe building changed).\r\n      this.searchRender();\r\n      return;\r\n    }\r\n    // Cleanup term to avoid search errors.\r\n    gvc.searchLastTerm =\r\n      term = (term || '').replace(/[`~!@#$%^&*()_|+\\-=?;:'\",.<>\\{\\}\\[\\]\\\\\\/]/gi, '');\r\n    // Save filter.\r\n    gvc.searchLastFilter = filterUri;\r\n    this.searchError =\r\n      this.noResult = false;\r\n    // Empty page.\r\n    this.results = [];\r\n    // Show spinner.\r\n    this.domLoadingSpinner.style.display = 'block';\r\n    // Build callback function.\r\n    let complete = (data) => {\r\n      this.domLoadingSpinner.style.display = 'none';\r\n      this.searchRender(data.responseJSON);\r\n    };\r\n    // Say that this function is the\r\n    // only one we expect to be executed.\r\n    // It prevent to parse multiple responses.\r\n    this.searchQueryLastComplete = complete;\r\n    gvc.ajax('webservice/search?' +\r\n      't=' + encodeURIComponent(term) +\r\n      '&f=' + encodeURIComponent(gvc.searchLastFilter), (data) => {\r\n      \"use strict\";\r\n      // Check that we are on the last callback expected.\r\n      complete === this.searchQueryLastComplete\r\n        // Continue.\r\n      && complete(data);\r\n    });\r\n  },\r\n\r\n  searchRender(response) {\r\n    \"use strict\";\r\n    let results = [];\r\n    // Reset again if just rendering fired.\r\n    this.searchError =\r\n      this.noResult = false;\r\n    this.results.length = 0;\r\n    this.set('results', []);\r\n    let totalCounter = 0;\r\n    let typesCounter = {};\r\n    let buildingsCounter = {};\r\n    let resultTemps = {};\r\n    // Allow empty response.\r\n    response = response || this.renderSearchResultResponse || {};\r\n    // Save last data for potential reload.\r\n    this.renderSearchResultResponse = response;\r\n\r\n    if (response.error) {\r\n      this.searchError = true;\r\n    }\r\n    else if (response.results) {\r\n\r\n      for (let result of response.results) {\r\n        // Data is allowed.\r\n\r\n          if($.inArray(result.type,gvc.allowedType) !== -1){\r\n          // Count results by building.\r\n          if (gvc.buildings[result.building]) {\r\n            buildingsCounter[result.building] = buildingsCounter[result.building] || 0;\r\n            buildingsCounter[result.building]++;\r\n          }\r\n          // This building is enabled.\r\n          if (gvc.buildingSelected === gvc.buildingSelectedAll || result.building === gvc.buildingSelected) {\r\n            // Count results.\r\n            typesCounter[result.type] = typesCounter[result.type] || 0;\r\n            typesCounter[result.type]++;\r\n            totalCounter++;\r\n\r\n              if (typeof resultTemps[result.type] === 'undefined')\r\n                  resultTemps[result.type] = [];\r\n              resultTemps[result.type].push(result);\r\n\r\n          }\r\n\r\n        }\r\n      }\r\n        if(typeof resultTemps[this.typeSelected] === 'undefined' ){\r\n            // Deselect tab if current.\r\n            let key = Object.keys(resultTemps)[0];\r\n            this.selection(key);\r\n            results =(typeof resultTemps[this.typeSelected] !== 'undefined' )? resultTemps[Object.keys(resultTemps)[0]] : [];\r\n        }\r\n        else{\r\n            results = resultTemps[this.typeSelected];\r\n        }\r\n      // Create title.\r\n      let resultsTitle = '';\r\n      // Results number.\r\n      resultsTitle += (results.length) ? results.length + ' résultats dans ' : 'Aucun résultat dans ';\r\n      // Building.\r\n      resultsTitle += (gvc.buildingSelected === gvc.buildingSelectedAll) ? 'tous les bâtiments' : 'le bâtiment ' + gvc.buildings[gvc.buildingSelected].title;\r\n      // Display title.\r\n      this.resultsTitle = resultsTitle;\r\n\r\n      // Display no results section or not.\r\n      this.noResult = results.length === 0;\r\n\r\n      // Show pins with results only.\r\n      gvc.map.pinHideAll();\r\n      $.each(gvc.buildings, (building) => {\r\n        if (buildingsCounter[building] || building === gvc.buildingSelected) {\r\n          gvc.map.pinShow(building, buildingsCounter[building] || 0);\r\n        }\r\n      });\r\n    }\r\n\r\n    this.tabsRegistry.all && (this.tabsRegistry.all.counter = totalCounter);\r\n      /*\r\n      gvc.allowedType.forEach(function(type) {\r\n          this.tabsRegistry[type] && (this.tabsRegistry[type].counter = typesCounter[type] || 0);\r\n      });*/\r\n      for (var i = 0; i <  gvc.allowedType.length; i++) {\r\n          this.tabsRegistry[gvc.allowedType[i]] && (this.tabsRegistry[gvc.allowedType[i]].counter = typesCounter[gvc.allowedType[i]] || 0);\r\n      }\r\n\r\n    setTimeout(() => {\r\n      this.set('results', results);\r\n    }, 100);\r\n  },\r\n\r\n    selection(val){\r\n        if (this.typeSelected && this.tabsRegistry[val]) {\r\n            this.tabsRegistry[this.typeSelected].$$('li').classList.remove('active');\r\n        }\r\n        // Save.\r\n        this.typeSelected = val;\r\n        log(this.typeSelected);\r\n        // It may not be already created.\r\n        if (this.tabsRegistry[val]) {\r\n            this.tabsRegistry[val].$$('li').classList.add('active');\r\n        }\r\n    }\r\n});\r\n"]}