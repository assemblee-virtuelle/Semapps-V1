{"version":3,"sources":["web/front/src/main.js"],"names":["window","log","m","console","readyCallbacks","SFClient","options","_classCallCheck","this","$","extend","formFields","fieldsAliases","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","_createClass","key","value","fields","sorted","index","Object","keys","property","field","cardinality","push","fieldsData","formFieldsSorted","sortFormFields","rdfType","i","data","GVCarto","_class","mainComponent","gvc","firstSearch","$window","buildingSelectedAll","buildingSelected","$loadingSpinner","sfClient","http://assemblee-virtuelle.github.io/grands-voisins-v2/gv.owl.ttl#status","http://assemblee-virtuelle.github.io/grands-voisins-v2/gv.owl.ttl#realisedContribution","http://xmlns.com/foaf/0.1/status","http://xmlns.com/foaf/0.1/name","http://vocab.sindice.net/csv/rowPosition","urn:gv/contactsPrint","http://assemblee-virtuelle.github.io/grands-voisins-v2/gv.owl.ttl#conventionType","http://virtual-assembly.org/pair_v2#hasResponsible","urn:displayLabel","http://assemblee-virtuelle.github.io/grands-voisins-v2/gv.owl.ttl#administrativeName","http://assemblee-virtuelle.github.io/grands-voisins-v2/gv.owl.ttl#building","http://assemblee-virtuelle.github.io/grands-voisins-v2/gv.owl.ttl#proposedContribution","http://purl.org/dc/elements/1.1/subject","http://assemblee-virtuelle.github.io/grands-voisins-v2/gv.owl.ttl#arrivalDate","http://assemblee-virtuelle.github.io/grands-voisins-v2/gv.owl.ttl#room","$gvMap","document","getElementById","$tabs","searchTypeCurrent","searchTypes","Personne","Organisation","location","hostname","body","classList","add","setSearchType","ajaxMultiple","buildings","start","sources","callback","ajaxCounter","allData","self","ajax","url","complete","e","JSON","parse","responseText","call","_this","domSearchTextInput","domId","domSearchResults","stateSet","timeout","callbackSearchEvent","searchEvent","bind","listen","blur","scrollToSearchResults","isReady","clearTimeout","setTimeout","stateName","stateCurrent","nameCapitalized","charAt","toUpperCase","slice","nameCurrentCapitalized","type","find","removeClass","addClass","renderSearchResult","show","hide","gvmap","mapShowBuildingPinAll","scrollTo","offset","top","duration","easing","preventDefault","term","search","building","char","replace","RegExp","_this2","lastSearchTerm","lastSearchBuilding","set","innerHTML","loadingPageContentStart","loadingPageContentStop","responseJSON","searchQueryLastComplete","encodeURIComponent","dataType","response","renderSearchResultResponse","error","results","length","mapShowBuildingPin","typesCounter","result","createElement","appendChild","html","total","id","event","Array","isArray","addEventListener","selector","querySelectorAll","ready"],"mappings":"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","file":"main.min.js","sourcesContent":["(function () {\n  'use strict';\n\n  // Devel\n  window.log = (m) => {\n    console.log(m);\n  };\n\n  var readyCallbacks = [];\n\n  // A custom client for Semantic Forms specific treatments.\n  class SFClient {\n    constructor(options) {\n      $.extend(true, this, {\n        formFields: {},\n        fieldsAliases: {\n          'http://www.w3.org/1999/02/22-rdf-syntax-ns#type': 'rdfType',\n        }\n      }, options);\n    }\n\n    sortFormFields(fields) {\n      let sorted = {};\n      for (let index in Object.keys(fields)) {\n        let key = this.fieldsAliases[fields[index].property] || fields[index].property;\n        let field = fields[index];\n        // 0:1 or 1:1\n        if (field.cardinality[2] === '1') {\n          sorted[key] = field;\n\n        }\n        // 0:* or 1:*\n        else {\n          sorted[key] = sorted[key] || [];\n          sorted[key].push(field);\n        }\n      }\n      return sorted;\n    }\n\n    loadFormFields(fieldsData) {\n      this.formFields = fieldsData;\n      this.formFieldsSorted = this.sortFormFields(fieldsData);\n\n      if (this.formFieldsSorted.rdfType) {\n        for (let i in Object.keys(this.formFieldsSorted.rdfType)) {\n          // Delete unwanted type.\n          if (this.formFieldsSorted.rdfType[i].value === 'http://vocab.sindice.net/csv/Row') {\n            delete this.formFieldsSorted.rdfType[i];\n          }\n        }\n      }\n    }\n\n    getValue(key) {\n      let fields = this.formFieldsSorted;\n      key = this.fieldsAliases[key] || key;\n      let data = typeof fields[key] === 'array' ? fields[key] : fields[key][0];\n      return data.value;\n    }\n  }\n\n  window.GVCarto = class {\n\n    constructor(mainComponent) {\n      window.gvc = this;\n      this.mainComponent = mainComponent;\n      this.firstSearch = true;\n      this.$window = $(window);\n      this.buildingSelectedAll = 'partout';\n      this.buildingSelected = this.buildingSelectedAll;\n      this.$loadingSpinner = $('#gv-spinner');\n      this.sfClient = new SFClient({\n        fieldsAliases: {\n          'http://assemblee-virtuelle.github.io/grands-voisins-v2/gv.owl.ttl#status': 'gvStatus',\n          'http://assemblee-virtuelle.github.io/grands-voisins-v2/gv.owl.ttl#realisedContribution': 'realisedContribution',\n          'http://xmlns.com/foaf/0.1/status': 'foafStatus',\n          'http://xmlns.com/foaf/0.1/name': 'foafName',\n          'http://vocab.sindice.net/csv/rowPosition': 'rowPosition',\n          'urn:gv/contactsPrint': 'contactsPrint',\n          'http://assemblee-virtuelle.github.io/grands-voisins-v2/gv.owl.ttl#conventionType': 'conventionType',\n          'http://virtual-assembly.org/pair_v2#hasResponsible': 'hasResponsible',\n          'urn:displayLabel': 'displayLabel',\n          'http://assemblee-virtuelle.github.io/grands-voisins-v2/gv.owl.ttl#administrativeName': 'administrativeName',\n          'http://assemblee-virtuelle.github.io/grands-voisins-v2/gv.owl.ttl#building': 'building',\n          'http://assemblee-virtuelle.github.io/grands-voisins-v2/gv.owl.ttl#proposedContribution': 'proposedContribution',\n          'http://purl.org/dc/elements/1.1/subject': 'subject',\n          'http://assemblee-virtuelle.github.io/grands-voisins-v2/gv.owl.ttl#arrivalDate': 'arrivalDate',\n          'http://assemblee-virtuelle.github.io/grands-voisins-v2/gv.owl.ttl#room': 'room'\n        }\n      });\n      this.$gvMap = $(document.getElementById('gv-map'));\n      this.$tabs = $('.nav-tabs');\n      this.searchTypeCurrent = 'all';\n      this.searchTypes = {\n        // TODO use URI for type keys (change should be made in sf lookup results).\n        Personne: 'Personne',\n        Organisation: 'Organisation'\n      };\n\n      // Special class for dev env.\n      if (window.location.hostname === '127.0.0.1') {\n        window.document.body.classList.add('dev-env');\n      }\n\n      this.setSearchType(this.searchTypeCurrent);\n\n      this.ajaxMultiple({\n        buildings: '/webservice/building'\n      }, this.start);\n    }\n\n    ajaxMultiple(sources, callback) {\n      \"use strict\";\n      var ajaxCounter = 0;\n      var allData = {};\n      var self = this;\n      for (var key in sources) {\n        ajaxCounter++;\n        $.ajax({\n          url: sources[key],\n          complete: function (key) {\n            return function (e) {\n              ajaxCounter--;\n              allData[key] = JSON.parse(e.responseText);\n              // Final callback.\n              if (ajaxCounter === 0) {\n                callback.call(self, allData);\n              }\n            }\n          }(key)\n        });\n      }\n    }\n\n    start(data) {\n      \"use strict\";\n      this.buildings = data.buildings;\n      // Save key for further usage.\n      for (let key in this.buildings) {\n        this.buildings[key].key = key;\n      }\n      // Shortcuts.\n      this.domSearchTextInput = this.domId('searchText');\n      this.domSearchResults = this.domId('searchResults');\n      this.stateSet('waiting');\n\n      // Listeners.\n      var timeout;\n      var callbackSearchEvent = this.searchEvent.bind(this);\n      // Click on submit button.\n      this.listen('searchForm', 'submit', (e) => {\n        this.domSearchTextInput.blur();\n        this.scrollToSearchResults();\n        callbackSearchEvent(e);\n      });\n      // Launch callbacks\n      this.isReady = true;\n      // Type in search field.\n      this.listen('searchText', 'keyup', () => {\n        if (timeout) {\n          window.clearTimeout(timeout);\n        }\n        // Avoid to make too much requests when typing.\n        timeout = window.setTimeout(callbackSearchEvent, 500);\n      });\n\n      // Ready callbacks.\n      for (let i in readyCallbacks) {\n        readyCallbacks[i]();\n      }\n    }\n\n    stateSet(stateName) {\n      if (this.stateCurrent !== stateName) {\n        let nameCapitalized = stateName.charAt(0).toUpperCase() + stateName.slice(1);\n        if (this.stateCurrent) {\n          let nameCurrentCapitalized = this.stateCurrent.charAt(0).toUpperCase() + this.stateCurrent.slice(1);\n          this['state' + nameCurrentCapitalized + 'Exit']();\n          this.stateCurrent = null;\n        }\n        // Callback should not return false if success.\n        if (this['state' + nameCapitalized + 'Init']() !== false) {\n          this.stateCurrent = stateName;\n        }\n      }\n    }\n\n    setSearchType(type) {\n      if (type !== this.searchTypeCurrent) {\n        this.$tabs\n          .find('li[rel=' + this.searchTypeCurrent + ']')\n          .removeClass('active');\n      }\n\n      this.searchTypeCurrent = type;\n\n      this.$tabs\n        .find('li[rel=' + type + ']')\n        .addClass('active');\n\n      // Reload render results.\n      gvc.renderSearchResult();\n    }\n\n    loadingPageContentStart() {\n      this.$loadingSpinner.show();\n    }\n\n    loadingPageContentStop() {\n      this.$loadingSpinner.hide();\n    }\n\n    /* -- Waiting --*/\n    stateWaitingInit() {\n      gvmap.mapShowBuildingPinAll();\n    }\n\n    stateWaitingExit() {\n\n    }\n\n    /* -- Search -- */\n\n    stateSearchInit() {\n      if (!this.domSearchTextInput.value) {\n        this.stateSet('waiting');\n        // Block saving current state.\n        return false;\n      }\n    }\n\n    stateSearchExit() {\n\n    }\n\n    scrollToSearchResults(complete) {\n      this.$window.scrollTo($('#searchTabs').offset().top - 150, {\n        duration: 1000,\n        easing: 'easeOutQuad',\n        complete: complete\n      });\n    }\n\n    searchEvent(e) {\n      // Event may be missing.\n      e && e.preventDefault();\n      var term = this.domSearchTextInput.value;\n      this.search(term, this.buildingSelected);\n    }\n\n    searchRouteChange(term, building) {\n      if (this.firstSearch) {\n        // Set value to input (used at first page load)\n        this.domSearchTextInput.value = term;\n        this.buildingSelected = gvc.buildingSelectedAll;\n        this.firstSearch = false;\n      }\n\n      // Launch search.\n      this.search(term, building);\n    }\n\n    textRemove(term, char) {\n      return term.replace(new RegExp(char, 'g'), '');\n    }\n\n    search(term, building) {\n      this.stateSet('search');\n\n      term = term.replace(/[`~!@#$%^&*()_|+\\-=?;:'\",.<>\\{\\}\\[\\]\\\\\\/]/gi, '');\n\n      // Prevent recursions due to route event changes,\n      // and also prevent to search two times the same values.\n      if (this.lastSearchTerm === term && this.lastSearchBuilding === building) {\n        return;\n      }\n\n      this.lastSearchTerm = term;\n      this.lastSearchBuilding = building;\n      this.mainComponent.set('route.path', '/rechercher/' + (building || 'partout') + '/' + term);\n\n      // Empty content.\n      this.domId('searchResults');\n      this.domSearchResults.innerHTML = '';\n      // Hide counters.\n      this.$tabs.find('li .counter').hide();\n\n      // Hide all results.\n      $('#gv-results-empty, #gv-results-error').hide();\n      this.loadingPageContentStart();\n\n      // Build callback function.\n      let complete = (data) => {\n        this.loadingPageContentStop();\n        this.renderSearchResult(data.responseJSON);\n      };\n\n      // Say that this function is the\n      // only one we expect to be executed.\n      // It prevent to parse multiple responses.\n      this.searchQueryLastComplete = complete;\n\n      this.loadingPageContentStart();\n\n      $.ajax({\n        url: '/webservice/search?b=' + encodeURIComponent(building) + '&t=' + encodeURIComponent(term),\n        dataType: 'json',\n        complete: (data) => {\n          \"use strict\";\n          // Check that we are on the last callback expected.\n          complete === this.searchQueryLastComplete\n            // Continue.\n          && complete(data);\n        }\n      });\n    }\n\n    renderSearchResult(response) {\n      \"use strict\";\n\n      // Allow empty response.\n      response = response || this.renderSearchResultResponse || {};\n      // Save last data for potential reload.\n      this.renderSearchResultResponse = response;\n\n      if (response.error) {\n        $('#gv-results-error').show();\n      }\n      else if (!response.results || !response.results.length) {\n        $('#gv-results-empty').show();\n      }\n      else {\n        // Empty if not already.\n        this.domSearchResults.innerHTML = '';\n        gvmap.mapShowBuildingPin(this.buildingSelected);\n        let typesCounter = {};\n        for (let i in response.results) {\n          let data = response.results[i];\n          // Count results event there are not displayed.\n          typesCounter[data.type] = typesCounter[data.type] || 0;\n          typesCounter[data.type]++;\n          // Data is allowed.\n          if (this.searchTypes[data.type] && (this.searchTypeCurrent === 'all' || data.type === this.searchTypeCurrent)) {\n            let result = document.createElement('gv-results-item');\n            // Apply all parameters (type / desc / etc... ).\n            $.extend(result, data);\n            this.domSearchResults.appendChild(result);\n          }\n        }\n\n        // Set counters.\n        this.$tabs.find('li .counter').html(0);\n        let keys = Object.keys(typesCounter);\n        let total = 0;\n        for (let i in keys) {\n          let type = keys[i]\n          let value = typesCounter[type] || 0;\n          this.$tabs.find('li[rel=\"' + type + '\"] .counter').html(value);\n          total += value;\n        }\n        this.$tabs.find('li[rel=\"all\"] .counter').html(total);\n        // Show counters.\n        this.$tabs.find('li .counter').show();\n      }\n    }\n\n    listen(id, event, callback) {\n      // Support list of events names.\n      if (Array.isArray(event)) {\n        for (let i in event) {\n          this.listen(id, event[i], callback);\n        }\n        return;\n      }\n      return this.domId(id).addEventListener(event, callback);\n    }\n\n    domId(id) {\n      return document.getElementById(id);\n    }\n\n    dom(selector) {\n      return document.querySelectorAll(selector);\n    }\n  };\n\n  window.GVCarto.ready = function (callback) {\n    if (!window.gvc || !window.gvc.isReady) {\n      readyCallbacks.push(callback);\n    }\n    else {\n      callback();\n    }\n  };\n}());\n"]}