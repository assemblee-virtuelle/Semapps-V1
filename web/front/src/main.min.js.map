{"version":3,"sources":["web/front/src/main.js"],"names":["window","log","m","console","readyCallbacks","SFClient","options","_classCallCheck","this","$","extend","formFields","fieldsAliases","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","_createClass","key","value","fields","sorted","index","Object","keys","property","field","cardinality","push","fieldsData","formFieldsSorted","sortFormFields","rdfType","i","data","GVCarto","_class","mainComponent","gvc","firstSearch","$window","buildingSelectedAll","buildingSelected","$loadingSpinner","sfClient","http://assemblee-virtuelle.github.io/grands-voisins-v2/gv.owl.ttl#status","http://assemblee-virtuelle.github.io/grands-voisins-v2/gv.owl.ttl#realisedContribution","http://xmlns.com/foaf/0.1/status","http://xmlns.com/foaf/0.1/name","http://vocab.sindice.net/csv/rowPosition","urn:gv/contactsPrint","http://assemblee-virtuelle.github.io/grands-voisins-v2/gv.owl.ttl#conventionType","http://virtual-assembly.org/pair_v2#hasResponsible","urn:displayLabel","http://assemblee-virtuelle.github.io/grands-voisins-v2/gv.owl.ttl#administrativeName","http://assemblee-virtuelle.github.io/grands-voisins-v2/gv.owl.ttl#building","http://assemblee-virtuelle.github.io/grands-voisins-v2/gv.owl.ttl#proposedContribution","http://purl.org/dc/elements/1.1/subject","http://assemblee-virtuelle.github.io/grands-voisins-v2/gv.owl.ttl#arrivalDate","http://assemblee-virtuelle.github.io/grands-voisins-v2/gv.owl.ttl#room","$gvMap","document","getElementById","$tabs","searchTypeCurrent","searchTypes","http://xmlns.com/foaf/0.1/Person","http://xmlns.com/foaf/0.1/Organization","location","hostname","body","classList","add","setSearchType","ajaxMultiple","buildings","start","sources","callback","ajaxCounter","allData","self","ajax","url","complete","e","JSON","parse","responseText","call","_this","domSearchTextInput","domId","domSearchResults","stateSet","timeout","callbackSearchEvent","searchEvent","bind","listen","blur","scrollToSearchResults","isReady","clearTimeout","setTimeout","stateName","stateCurrent","nameCapitalized","charAt","toUpperCase","slice","nameCurrentCapitalized","type","find","removeClass","addClass","renderSearchResult","show","hide","gvmap","mapShowBuildingPinAll","scrollTo","offset","top","duration","easing","preventDefault","term","search","building","char","replace","RegExp","_this2","lastSearchTerm","lastSearchBuilding","set","innerHTML","loadingPageContentStart","loadingPageContentStop","responseJSON","searchQueryLastComplete","encodeURIComponent","dataType","response","renderSearchResultResponse","error","results","length","mapShowBuildingPin","typesCounter","result","createElement","appendChild","html","total","id","event","Array","isArray","addEventListener","selector","querySelectorAll","ready"],"mappings":"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","file":"main.min.js","sourcesContent":["(function () {\r\n  'use strict';\r\n\r\n  // Devel\r\n  window.log = (m) => {\r\n    console.log(m);\r\n  };\r\n\r\n  var readyCallbacks = [];\r\n\r\n  // A custom client for Semantic Forms specific treatments.\r\n  class SFClient {\r\n    constructor(options) {\r\n      $.extend(true, this, {\r\n        formFields: {},\r\n        fieldsAliases: {\r\n          'http://www.w3.org/1999/02/22-rdf-syntax-ns#type': 'rdfType',\r\n        }\r\n      }, options);\r\n    }\r\n\r\n    sortFormFields(fields) {\r\n      let sorted = {};\r\n      for (let index in Object.keys(fields)) {\r\n        let key = this.fieldsAliases[fields[index].property] || fields[index].property;\r\n        let field = fields[index];\r\n        // 0:1 or 1:1\r\n        if (field.cardinality[2] === '1') {\r\n          sorted[key] = field;\r\n\r\n        }\r\n        // 0:* or 1:*\r\n        else {\r\n          sorted[key] = sorted[key] || [];\r\n          sorted[key].push(field);\r\n        }\r\n      }\r\n      return sorted;\r\n    }\r\n\r\n    loadFormFields(fieldsData) {\r\n      this.formFields = fieldsData;\r\n      this.formFieldsSorted = this.sortFormFields(fieldsData);\r\n\r\n      if (this.formFieldsSorted.rdfType) {\r\n        for (let i in Object.keys(this.formFieldsSorted.rdfType)) {\r\n          // Delete unwanted type.\r\n          if (this.formFieldsSorted.rdfType[i].value === 'http://vocab.sindice.net/csv/Row') {\r\n            delete this.formFieldsSorted.rdfType[i];\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    getValue(key) {\r\n      let fields = this.formFieldsSorted;\r\n      key = this.fieldsAliases[key] || key;\r\n      if (fields[key]) {\r\n        let data = typeof fields[key] === 'array' ? fields[key] : fields[key][0];\r\n        return data.value;\r\n      }\r\n      return '';\r\n    }\r\n  }\r\n\r\n  window.GVCarto = class {\r\n\r\n    constructor(mainComponent) {\r\n      window.gvc = this;\r\n      this.mainComponent = mainComponent;\r\n      this.firstSearch = true;\r\n      this.$window = $(window);\r\n      this.buildingSelectedAll = 'partout';\r\n      this.buildingSelected = this.buildingSelectedAll;\r\n      this.$loadingSpinner = $('#gv-spinner');\r\n      this.sfClient = new SFClient({\r\n        fieldsAliases: {\r\n          'http://assemblee-virtuelle.github.io/grands-voisins-v2/gv.owl.ttl#status': 'gvStatus',\r\n          'http://assemblee-virtuelle.github.io/grands-voisins-v2/gv.owl.ttl#realisedContribution': 'realisedContribution',\r\n          'http://xmlns.com/foaf/0.1/status': 'foafStatus',\r\n          'http://xmlns.com/foaf/0.1/name': 'foafName',\r\n          'http://vocab.sindice.net/csv/rowPosition': 'rowPosition',\r\n          'urn:gv/contactsPrint': 'contactsPrint',\r\n          'http://assemblee-virtuelle.github.io/grands-voisins-v2/gv.owl.ttl#conventionType': 'conventionType',\r\n          'http://virtual-assembly.org/pair_v2#hasResponsible': 'hasResponsible',\r\n          'urn:displayLabel': 'displayLabel',\r\n          'http://assemblee-virtuelle.github.io/grands-voisins-v2/gv.owl.ttl#administrativeName': 'administrativeName',\r\n          'http://assemblee-virtuelle.github.io/grands-voisins-v2/gv.owl.ttl#building': 'building',\r\n          'http://assemblee-virtuelle.github.io/grands-voisins-v2/gv.owl.ttl#proposedContribution': 'proposedContribution',\r\n          'http://purl.org/dc/elements/1.1/subject': 'subject',\r\n          'http://assemblee-virtuelle.github.io/grands-voisins-v2/gv.owl.ttl#arrivalDate': 'arrivalDate',\r\n          'http://assemblee-virtuelle.github.io/grands-voisins-v2/gv.owl.ttl#room': 'room'\r\n        }\r\n      });\r\n      this.$gvMap = $(document.getElementById('gv-map'));\r\n      this.$tabs = $('.nav-tabs');\r\n      this.searchTypeCurrent = 'all';\r\n      this.searchTypes = {\r\n        \"http://xmlns.com/foaf/0.1/Person\": 'Personne',\r\n        \"http://xmlns.com/foaf/0.1/Organization\": 'Organisation'\r\n      };\r\n\r\n      // Special class for dev env.\r\n      if (window.location.hostname === '127.0.0.1') {\r\n        window.document.body.classList.add('dev-env');\r\n      }\r\n\r\n      this.setSearchType(this.searchTypeCurrent);\r\n\r\n      this.ajaxMultiple({\r\n        buildings: '/webservice/building'\r\n      }, this.start);\r\n    }\r\n\r\n    ajaxMultiple(sources, callback) {\r\n      \"use strict\";\r\n      var ajaxCounter = 0;\r\n      var allData = {};\r\n      var self = this;\r\n      for (var key in sources) {\r\n        ajaxCounter++;\r\n        $.ajax({\r\n          url: sources[key],\r\n          complete: function (key) {\r\n            return function (e) {\r\n              ajaxCounter--;\r\n              allData[key] = JSON.parse(e.responseText);\r\n              // Final callback.\r\n              if (ajaxCounter === 0) {\r\n                callback.call(self, allData);\r\n              }\r\n            }\r\n          }(key)\r\n        });\r\n      }\r\n    }\r\n\r\n    start(data) {\r\n      \"use strict\";\r\n      this.buildings = data.buildings;\r\n      // Save key for further usage.\r\n      for (let key in this.buildings) {\r\n        this.buildings[key].key = key;\r\n      }\r\n      // Shortcuts.\r\n      this.domSearchTextInput = this.domId('searchText');\r\n      this.domSearchResults = this.domId('searchResults');\r\n      this.stateSet('waiting');\r\n\r\n      // Listeners.\r\n      var timeout;\r\n      var callbackSearchEvent = this.searchEvent.bind(this);\r\n      // Click on submit button.\r\n      this.listen('searchForm', 'submit', (e) => {\r\n        this.domSearchTextInput.blur();\r\n        this.scrollToSearchResults();\r\n        callbackSearchEvent(e);\r\n      });\r\n      // Launch callbacks\r\n      this.isReady = true;\r\n      // Type in search field.\r\n      this.listen('searchText', 'keyup', () => {\r\n        if (timeout) {\r\n          window.clearTimeout(timeout);\r\n        }\r\n        // Avoid to make too much requests when typing.\r\n        timeout = window.setTimeout(callbackSearchEvent, 500);\r\n      });\r\n\r\n      // Ready callbacks.\r\n      for (let i in readyCallbacks) {\r\n        readyCallbacks[i]();\r\n      }\r\n    }\r\n\r\n    stateSet(stateName) {\r\n      if (this.stateCurrent !== stateName) {\r\n        let nameCapitalized = stateName.charAt(0).toUpperCase() + stateName.slice(1);\r\n        if (this.stateCurrent) {\r\n          let nameCurrentCapitalized = this.stateCurrent.charAt(0).toUpperCase() + this.stateCurrent.slice(1);\r\n          this['state' + nameCurrentCapitalized + 'Exit']();\r\n          this.stateCurrent = null;\r\n        }\r\n        // Callback should not return false if success.\r\n        if (this['state' + nameCapitalized + 'Init']() !== false) {\r\n          this.stateCurrent = stateName;\r\n        }\r\n      }\r\n    }\r\n\r\n    setSearchType(type) {\r\n      if (type !== this.searchTypeCurrent) {\r\n        this.$tabs\r\n          .find('li[rel=' + this.searchTypeCurrent + ']')\r\n          .removeClass('active');\r\n      }\r\n\r\n      this.searchTypeCurrent = type;\r\n\r\n      this.$tabs\r\n        .find('li[rel=' + type + ']')\r\n        .addClass('active');\r\n\r\n      // Reload render results.\r\n      gvc.renderSearchResult();\r\n    }\r\n\r\n    loadingPageContentStart() {\r\n      this.$loadingSpinner.show();\r\n    }\r\n\r\n    loadingPageContentStop() {\r\n      this.$loadingSpinner.hide();\r\n    }\r\n\r\n    /* -- Waiting --*/\r\n    stateWaitingInit() {\r\n      gvmap.mapShowBuildingPinAll();\r\n    }\r\n\r\n    stateWaitingExit() {\r\n\r\n    }\r\n\r\n    /* -- Search -- */\r\n\r\n    stateSearchInit() {\r\n      if (!this.domSearchTextInput.value) {\r\n        this.stateSet('waiting');\r\n        // Block saving current state.\r\n        return false;\r\n      }\r\n    }\r\n\r\n    stateSearchExit() {\r\n\r\n    }\r\n\r\n    scrollToSearchResults(complete) {\r\n      this.$window.scrollTo($('#searchTabs').offset().top - 150, {\r\n        duration: 1000,\r\n        easing: 'easeOutQuad',\r\n        complete: complete\r\n      });\r\n    }\r\n\r\n    searchEvent(e) {\r\n      // Event may be missing.\r\n      e && e.preventDefault();\r\n      var term = this.domSearchTextInput.value;\r\n      this.search(term, this.buildingSelected);\r\n    }\r\n\r\n    searchRouteChange(term, building) {\r\n      if (this.firstSearch) {\r\n        // Set value to input (used at first page load)\r\n        this.domSearchTextInput.value = term;\r\n        this.buildingSelected = gvc.buildingSelectedAll;\r\n        this.firstSearch = false;\r\n      }\r\n\r\n      // Launch search.\r\n      this.search(term, building);\r\n    }\r\n\r\n    textRemove(term, char) {\r\n      return term.replace(new RegExp(char, 'g'), '');\r\n    }\r\n\r\n    search(term, building) {\r\n      this.stateSet('search');\r\n\r\n      term = term.replace(/[`~!@#$%^&*()_|+\\-=?;:'\",.<>\\{\\}\\[\\]\\\\\\/]/gi, '');\r\n\r\n      // Prevent recursions due to route event changes,\r\n      // and also prevent to search two times the same values.\r\n      if (this.lastSearchTerm === term && this.lastSearchBuilding === building) {\r\n        return;\r\n      }\r\n\r\n      this.lastSearchTerm = term;\r\n      this.lastSearchBuilding = building;\r\n      this.mainComponent.set('route.path', '/rechercher/' + (building || 'partout') + '/' + term);\r\n\r\n      // Empty content.\r\n      this.domId('searchResults');\r\n      this.domSearchResults.innerHTML = '';\r\n      // Hide counters.\r\n      this.$tabs.find('li .counter').hide();\r\n\r\n      // Hide all results.\r\n      $('#gv-results-empty, #gv-results-error').hide();\r\n      this.loadingPageContentStart();\r\n\r\n      // Build callback function.\r\n      let complete = (data) => {\r\n        this.loadingPageContentStop();\r\n        this.renderSearchResult(data.responseJSON);\r\n      };\r\n\r\n      // Say that this function is the\r\n      // only one we expect to be executed.\r\n      // It prevent to parse multiple responses.\r\n      this.searchQueryLastComplete = complete;\r\n\r\n      this.loadingPageContentStart();\r\n\r\n      $.ajax({\r\n        url: '/webservice/search?b=' + encodeURIComponent(building) + '&t=' + encodeURIComponent(term),\r\n        dataType: 'json',\r\n        complete: (data) => {\r\n          \"use strict\";\r\n          // Check that we are on the last callback expected.\r\n          complete === this.searchQueryLastComplete\r\n            // Continue.\r\n          && complete(data);\r\n        }\r\n      });\r\n    }\r\n\r\n    renderSearchResult(response) {\r\n      \"use strict\";\r\n\r\n      // Allow empty response.\r\n      response = response || this.renderSearchResultResponse || {};\r\n      // Save last data for potential reload.\r\n      this.renderSearchResultResponse = response;\r\n\r\n      if (response.error) {\r\n        $('#gv-results-error').show();\r\n      }\r\n      else if (!response.results || !response.results.length) {\r\n        $('#gv-results-empty').show();\r\n      }\r\n      else {\r\n        // Empty if not already.\r\n        this.domSearchResults.innerHTML = '';\r\n        gvmap.mapShowBuildingPin(this.buildingSelected);\r\n        let typesCounter = {};\r\n\r\n        for (let i in response.results) {\r\n          let data = response.results[i];\r\n          // Data is allowed.\r\n          if (this.searchTypes[data.type]) {\r\n            // Count results event there are not displayed.\r\n            typesCounter[data.type] = typesCounter[data.type] || 0;\r\n            typesCounter[data.type]++;\r\n            if ((this.searchTypeCurrent === 'all' || data.type === this.searchTypeCurrent)) {\r\n              let result = document.createElement('gv-results-item');\r\n              // Apply all parameters (type / desc / etc... ).\r\n              $.extend(result, data);\r\n              this.domSearchResults.appendChild(result);\r\n            }\r\n          }\r\n        }\r\n\r\n        // Set counters.\r\n        this.$tabs.find('li .counter').html(0);\r\n        let keys = Object.keys(typesCounter);\r\n        let total = 0;\r\n        for (let i in keys) {\r\n          let type = keys[i]\r\n          let value = typesCounter[type] || 0;\r\n          this.$tabs.find('li[rel=\"' + type + '\"] .counter').html(value);\r\n          total += value;\r\n        }\r\n        this.$tabs.find('li[rel=\"all\"] .counter').html(total);\r\n        // Show counters.\r\n        this.$tabs.find('li .counter').show();\r\n      }\r\n    }\r\n\r\n    listen(id, event, callback) {\r\n      // Support list of events names.\r\n      if (Array.isArray(event)) {\r\n        for (let i in event) {\r\n          this.listen(id, event[i], callback);\r\n        }\r\n        return;\r\n      }\r\n      return this.domId(id).addEventListener(event, callback);\r\n    }\r\n\r\n    domId(id) {\r\n      return document.getElementById(id);\r\n    }\r\n\r\n    dom(selector) {\r\n      return document.querySelectorAll(selector);\r\n    }\r\n  };\r\n\r\n  window.GVCarto.ready = function (callback) {\r\n    if (!window.gvc || !window.gvc.isReady) {\r\n      readyCallbacks.push(callback);\r\n    }\r\n    else {\r\n      callback();\r\n    }\r\n  };\r\n}());\r\n"]}