{"version":3,"sources":["web/front/src/main.js"],"names":["window","log","m","console","readyCallbacks","SFClient","_classCallCheck","this","_createClass","key","value","fields","sorted","index","Object","keys","property","field","cardinality","push","GVCarto","_class","mainComponent","gvc","firstSearch","$window","$","buildingSelected","$loadingSpinner","sfClient","$gvMap","document","getElementById","location","hostname","body","classList","add","ajaxMultiple","buildings","start","sources","callback","ajaxCounter","allData","self","ajax","url","complete","e","JSON","parse","responseText","call","data","_this","domSearchTextInput","domId","domSearchResults","stateSet","callbackSearchEvent","searchEvent","bind","listen","blur","scrollToSearchResults","isReady","timeout","clearTimeout","setTimeout","i","stateName","stateCurrent","nameCapitalized","charAt","toUpperCase","slice","nameCurrentCapitalized","show","hide","gvmap","mapShowBuildingPinAll","scrollTo","offset","top","duration","easing","preventDefault","term","search","building","char","replace","RegExp","_this2","lastSearchTerm","lastSearchBuilding","set","innerHTML","loadingPageContentStart","loadingPageContentStop","renderSearchResult","responseJSON","searchQueryLastComplete","encodeURIComponent","dataType","response","renderSearchResultResponse","error","results","length","mapShowBuildingPin","result","createElement","label","uri","appendChild","id","event","Array","isArray","addEventListener","selector","querySelectorAll","ready"],"mappings":"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","file":"main.min.js","sourcesContent":["(function () {\n  'use strict';\n\n  // Devel\n  window.log = (m) => {\n    console.log(m);\n  };\n\n  var readyCallbacks = [];\n\n  // A custom client for Semantic Forms specific treatments.\n  class SFClient {\n    sortFormFields(fields) {\n      let sorted = {};\n      for (let index in Object.keys(fields)) {\n        let key = fields[index].property;\n        let field = fields[index];\n        if (field.cardinality === '0 Or More') {\n          sorted[key] = sorted[key] || [];\n          sorted[key].push(field);\n        }\n        else {\n          sorted[key] = field;\n        }\n      }\n      return sorted;\n    }\n\n    getFirstFieldValue(key, fields) {\n      return typeof fields[key] === 'array' ? fields[key] : fields[key][0];\n    }\n  }\n\n  window.GVCarto = class {\n\n    constructor(mainComponent) {\n      window.gvc = this;\n      this.mainComponent = mainComponent;\n      this.firstSearch = true;\n      this.$window = $(window);\n      this.buildingSelected = 'partout';\n      this.$loadingSpinner = $('#gv-spinner');\n      this.sfClient = new SFClient();\n      this.$gvMap = $(document.getElementById('gv-map'));\n\n      // Special class for dev env.\n      if (window.location.hostname === '127.0.0.1') {\n        window.document.body.classList.add('dev-env');\n      }\n\n      this.ajaxMultiple({\n        buildings: '/webservice/building'\n      }, this.start);\n    }\n\n    ajaxMultiple(sources, callback) {\n      \"use strict\";\n      var ajaxCounter = 0;\n      var allData = {};\n      var self = this;\n      for (var key in sources) {\n        ajaxCounter++;\n        $.ajax({\n          url: sources[key],\n          complete: function (key) {\n            return function (e) {\n              ajaxCounter--;\n              allData[key] = JSON.parse(e.responseText);\n              // Final callback.\n              if (ajaxCounter === 0) {\n                callback.call(self, allData);\n              }\n            }\n          }(key)\n        });\n      }\n    }\n\n    start(data) {\n      \"use strict\";\n      this.buildings = data.buildings;\n      // Save key for furthe usage.\n      for (let key in this.buildings) {\n        this.buildings[key].key = key;\n      }\n      // Shortcuts.\n      this.domSearchTextInput = this.domId('searchText');\n      this.domSearchResults = this.domId('searchResults');\n      this.stateSet('waiting');\n\n      // Listeners.\n      var callbackSearchEvent = this.searchEvent.bind(this);\n      // Click on submit button.\n      this.listen('searchForm', 'submit', (e) => {\n        this.domSearchTextInput.blur();\n        this.scrollToSearchResults();\n        callbackSearchEvent(e);\n      });\n      // Launch callbacks\n      this.isReady = true;\n      var timeout;\n      // Type in search field.\n      this.listen('searchText', 'keyup', () => {\n        if (timeout) {\n          window.clearTimeout(timeout);\n        }\n        // Avoid to make too much requests when typing.\n        timeout = window.setTimeout(callbackSearchEvent, 500);\n      });\n\n      // Ready callbacks.\n      for (let i in readyCallbacks) {\n        readyCallbacks[i]();\n      }\n    }\n\n    stateSet(stateName) {\n      if (this.stateCurrent !== stateName) {\n        let nameCapitalized = stateName.charAt(0).toUpperCase() + stateName.slice(1);\n        if (this.stateCurrent) {\n          let nameCurrentCapitalized = this.stateCurrent.charAt(0).toUpperCase() + this.stateCurrent.slice(1);\n          this['state' + nameCurrentCapitalized + 'Exit']();\n          this.stateCurrent = null;\n        }\n        // Callback should not return false if success.\n        if (this['state' + nameCapitalized + 'Init']() !== false) {\n          this.stateCurrent = stateName;\n        }\n      }\n    }\n\n    loadingPageContentStart() {\n      this.$loadingSpinner.show();\n    }\n\n    loadingPageContentStop() {\n      this.$loadingSpinner.hide();\n    }\n\n    /* -- Waiting --*/\n    stateWaitingInit() {\n      gvmap.mapShowBuildingPinAll();\n    }\n\n    stateWaitingExit() {\n\n    }\n\n    /* -- Search -- */\n\n    stateSearchInit() {\n      if (!this.domSearchTextInput.value) {\n        this.stateSet('waiting');\n        // Block saving current state.\n        return false;\n      }\n    }\n\n    stateSearchExit() {\n\n    }\n\n    scrollToSearchResults(complete) {\n      this.$window.scrollTo($('#searchTabs').offset().top - 150, {\n        duration: 1000,\n        easing: 'easeOutQuad',\n        complete: complete\n      });\n    }\n\n    searchEvent(e) {\n      // Event may be missing.\n      e && e.preventDefault();\n      var term = this.domSearchTextInput.value;\n      this.search(term, this.buildingSelected);\n    }\n\n    searchRouteChange(term, building) {\n      if (this.firstSearch) {\n        // Set value to input (used at first page load)\n        this.domSearchTextInput.value = term;\n        this.buildingSelected = 'building';\n        this.firstSearch = false;\n      }\n\n      // Launch search.\n      this.search(term, building);\n    }\n\n    textRemove(term, char) {\n      return term.replace(new RegExp(char, 'g'), '');\n    }\n\n    search(term, building) {\n      this.stateSet('search');\n\n      term = term.replace(/[`~!@#$%^&*()_|+\\-=?;:'\",.<>\\{\\}\\[\\]\\\\\\/]/gi, '');\n\n      // Prevent recursions due to route event changes,\n      // and also prevent to search two times the same values.\n      if (this.lastSearchTerm === term && this.lastSearchBuilding === building) {\n        return;\n      }\n\n      this.lastSearchTerm = term;\n      this.lastSearchBuilding = building;\n      this.mainComponent.set('route.path', '/rechercher/' + (building || 'partout') + '/' + term);\n\n      // Empty content.\n      this.domId('searchResults');\n      this.domSearchResults.innerHTML = '';\n\n      // Hide all results.\n      $('#gv-results-empty, #gv-results-error').hide();\n      this.loadingPageContentStart();\n\n      // Build callback function.\n      let complete = (data) => {\n        this.loadingPageContentStop();\n        this.renderSearchResult(data.responseJSON);\n      };\n\n      // Say that this function is the\n      // only one we expect to be executed.\n      // It prevent to parse multiple responses.\n      this.searchQueryLastComplete = complete;\n\n      this.loadingPageContentStart();\n\n      $.ajax({\n        url: '/webservice/search?b=' + encodeURIComponent(building) + '&t=' + encodeURIComponent(term),\n        dataType: 'json',\n        complete: (data) => {\n          \"use strict\";\n          // Check that we are on the last callback expected.\n          complete === this.searchQueryLastComplete\n            // Continue.\n          && complete(data);\n        }\n      });\n    }\n\n    renderSearchResult(response) {\n      \"use strict\";\n      // Allow empty response.\n      response = response || this.renderSearchResultResponse || {};\n      // Save last data for potential reload.\n      this.renderSearchResultResponse = response;\n\n      if (response.error) {\n        $('#gv-results-error').show();\n      }\n      else if (!response.results || !response.results.length) {\n        $('#gv-results-empty').show();\n      }\n      else {\n        gvmap.mapShowBuildingPin(this.buildingSelected);\n        for (let i in response.results) {\n          let data = response.results[i];\n          let result = document.createElement('gv-results-item');\n          result.label = data.label;\n          result.uri = data.uri;\n          this.domSearchResults.appendChild(result);\n        }\n      }\n    }\n\n    listen(id, event, callback) {\n      // Support list of events names.\n      if (Array.isArray(event)) {\n        for (let i in event) {\n          this.listen(id, event[i], callback);\n        }\n        return;\n      }\n      return this.domId(id).addEventListener(event, callback);\n    }\n\n    domId(id) {\n      return document.getElementById(id);\n    }\n\n    dom(selector) {\n      return document.querySelectorAll(selector);\n    }\n  };\n\n  window.GVCarto.ready = function (callback) {\n    if (!window.gvc || !window.gvc.isReady) {\n      readyCallbacks.push(callback);\n    }\n    else {\n      callback();\n    }\n  };\n}());\n"]}