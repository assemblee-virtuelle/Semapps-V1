{"version":3,"sources":["web/front/src/semapps-results/semapps-results.js"],"names":["Polymer","is","properties","tabFirst","type","Object","value","plural","icon","typeSelected","String","tabs","Array","tabsRegistry","results","searchLastTerm","route","observer","attached","_this","this","semapps","domSearchResults","domId","domLoadingSpinner","$searchThemeFilter","$","SemAppsCarto","ready","typeSel","each","entities","data","counter","push","selectType","tabRegister","component","tab","selection","searchRender","_routeChanged","_this2","prefix","map","zoomGlobal","window","split","path","search","term","building","_this3","filterUri","val","searchLastFilter","replace","searchError","noResult","style","display","complete","responseJSON","searchQueryLastComplete","ajax","encodeURIComponent","response","_this4","length","set","totalCounter","typesCounter","resultTemps","renderSearchResultResponse","error","pinHideAll","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","result","log","pins","getAddressToCreatePoint","pinShow","err","return","key","keys","resultsTitle","all","entity","setTimeout","$$","classList","remove","add"],"mappings":"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","file":"semapps-results.min.js","sourcesContent":["Polymer({\n    is: 'semapps-results',\n    properties: {\n        tabFirst: {\n            type: Object,\n            value: {\n                type: 'all',\n                plural: 'Tous',\n                icon: 'list'\n            }\n        },\n        typeSelected: {\n            type: String\n        },\n        tabs: {\n            type: Array,\n            value: []\n        },\n        tabsRegistry: {\n            type: Object,\n            value: {}\n        },\n        results: {\n            type: Array,\n            value: []\n        },\n        searchLastTerm: {\n            type: String,\n            value: null\n        },\n        route: {\n            type: Object,\n            observer: '_routeChanged'\n        }\n    },\n\n    attached() {\n        \"use strict\";\n        semapps.results = this;\n        this.domSearchResults = semapps.domId('searchResults');\n        this.domLoadingSpinner = semapps.domId('searchLoadingSpinner');\n        this.$searchThemeFilter = $('#searchThemeFilter');\n        // Wait global settings.\n        SemAppsCarto.ready(() => {\n            let tabs = [];\n            let typeSel = '';\n            $.each(semapps.entities, (type, data) => {\n                data.counter = 0;\n                typeSel = (typeSel == '') ? type : typeSel;\n                tabs.push(data);\n            });\n            this.tabs = tabs;\n            // Activate first tab by default.\n            this.selectType(typeSel);\n        });\n    },\n\n    tabRegister(type, component) {\n        \"use strict\";\n        this.tabsRegistry[type] = component;\n        // Refresh selected tab.\n        this.selectType(this.typeSelected);\n    },\n\n    selectType(tab)  {\n        \"use strict\";\n        this.selection(tab);\n        // Render results.\n        this.searchRender();\n    },\n\n    _routeChanged: function (data) {\n        // We are on the search mode.\n        if (data.prefix === '/rechercher') {\n            semapps.map.zoomGlobal();\n            // Route change may be fired before init.\n            window.SemAppsCarto.ready(() => {\n                let split = data.path.split('/');\n                this.search(split[2], split[1]);\n            });\n        }\n    },\n\n    search(term, building) {\n        \"use strict\";\n        let filterUri = this.$searchThemeFilter.val();\n\n        // Term and has not changed.\n        if (semapps.searchLastTerm === term &&\n            // Filter has not changed.\n            semapps.searchLastFilter === filterUri) {\n            // (maybe building changed).\n            this.searchRender();\n            return;\n        }\n        // Cleanup term to avoid search errors.\n        semapps.searchLastTerm =\n            term = (term || '').replace(/[`~!@#$%^&*()_|+\\-=?;:'\",.<>\\{\\}\\[\\]\\\\\\/]/gi, '');\n        // Save filter.\n        semapps.searchLastFilter = filterUri;\n        this.searchError =\n            this.noResult = false;\n        // Empty page.\n        this.results = [];\n        // Show spinner.\n        this.domLoadingSpinner.style.display = 'block';\n        // Build callback function.\n        let complete = (data) => {\n            this.domLoadingSpinner.style.display = 'none';\n            this.searchRender(data.responseJSON);\n        };\n        // Say that this function is the\n        // only one we expect to be executed.\n        // It prevent to parse multiple responses.\n        this.searchQueryLastComplete = complete;\n        semapps.ajax('webservice/search?' +\n            't=' + encodeURIComponent(term) +\n            '&f=' + encodeURIComponent(semapps.searchLastFilter), (data) => {\n            \"use strict\";\n            // Check that we are on the last callback expected.\n            complete === this.searchQueryLastComplete\n            // Continue.\n            && complete(data);\n        });\n    },\n\n    searchRender(response) {\n        \"use strict\";\n        let results = [];\n        // Reset again if just rendering fired.\n        this.searchError =\n            this.noResult = false;\n        this.results.length = 0;\n        this.set('results', []);\n        let totalCounter = 0;\n        let typesCounter = {};\n        let resultTemps = {};\n        // Allow empty response.\n        response = response || this.renderSearchResultResponse || {};\n        // Save last data for potential reload.\n        this.renderSearchResultResponse = response;\n\n        if (response.error) {\n            this.searchError = true;\n        }\n        else if (response.results) {\n            semapps.map.pinHideAll();\n\n            for (let result of response.results) {\n                // Data is allowed.\n                if(semapps.entities[result.type]){\n                    log(result.type);\n                    typesCounter[result.type] = typesCounter[result.type] || 0;\n                    typesCounter[result.type]++;\n                    totalCounter++;\n\n                    if (typeof resultTemps[result.type] === 'undefined')\n                        resultTemps[result.type] = [];\n                    resultTemps[result.type].push(result);\n                    log(resultTemps);\n                    if(result[\"address\"]){\n                        if( semapps.map.pins[result[\"uri\"]] === undefined){\n                            semapps.getAddressToCreatePoint(result[\"address\"],result[\"title\"],result[\"type\"],result[\"uri\"]);\n                        }\n                        else{\n                            semapps.map.pinShow(result[\"uri\"]);\n                        }\n                    }\n                }\n            }\n            // semapps.map.pinShowAll();\n            if(typeof resultTemps[this.typeSelected] === 'undefined' ){\n                // Deselect tab if current.\n                let key = Object.keys(resultTemps)[0];\n                this.selection(key);\n                results =(typeof resultTemps[this.typeSelected] !== 'undefined' )? resultTemps[Object.keys(resultTemps)[0]] : [];\n            }\n            else{\n                results = resultTemps[this.typeSelected];\n            }\n            // Create title.\n            let resultsTitle = '';\n            // Results number.\n            resultsTitle += (results.length) ? results.length + ' résultats ' : 'Aucun résultat  ';\n            // Building.\n            // Display title.\n            this.resultsTitle = resultsTitle;\n\n            // Display no results section or not.\n            this.noResult = results.length === 0;\n\n        }\n\n        this.tabsRegistry.all && (this.tabsRegistry.all.counter = totalCounter);\n        for (let entity in semapps.entities){\n            this.tabsRegistry[entity] && (this.tabsRegistry[entity].counter = typesCounter[entity] || 0);\n\n        }\n        setTimeout(() => {\n            this.set('results', results);\n        }, 100);\n    },\n\n    selection(val){\n        if (this.typeSelected && this.tabsRegistry[val]) {\n            this.tabsRegistry[this.typeSelected].$$('li').classList.remove('active');\n        }\n        // Save.\n        this.typeSelected = val;\n        // It may not be already created.\n        if (this.tabsRegistry[val]) {\n            this.tabsRegistry[val].$$('li').classList.add('active');\n        }\n    }\n});\n"]}