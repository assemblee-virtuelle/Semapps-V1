{"version":3,"sources":["web/front/src/gv-map/gv-map.js"],"names":["Polymer","is","attached","_this","this","$mapZones","$","hoverActive","window","gvmap","on","e","mapSelectBuilding","currentTarget","getAttribute","split","mapDeselectBuilding","key","gvc","buildingSelected","searchEvent","scrollToSearchResults","mapIsOver","mapSelectCurrent","zone","mapGetZone","classList","add","remove","mapSelectBuildingToggle","_this2","mapTimeout","clearTimeout","setTimeout","mapDeselectBuildingReset","method","each","index","document","getElementById"],"mappings":"YAAAA,UACEC,GAAI,SAGJC,SAJM,WAIK,GAAAC,GAAAC,IACTA,MAAKC,UAAYC,EAAE,oBACnBF,KAAKG,aAAc,EAEnBC,OAAOC,MAAQL,KAEfA,KAAKC,UACFK,GAAG,YAAa,SAACC,GAChBR,EAAKI,aAAeJ,EAAKS,kBAAkBD,EAAEE,cAAcC,aAAa,MAAMC,MAAM,KAAK,MAE1FL,GAAG,WAAY,SAACC,GACfR,EAAKI,aAAeJ,EAAKa,oBAAoBL,EAAEE,cAAcC,aAAa,MAAMC,MAAM,KAAK,MAG5FL,GAAG,QAAS,SAACC,GACZ,GAAIM,GAAMN,EAAEE,cAAcC,aAAa,MAAMC,MAAM,KAAK,EACxDE,GAAMA,IAAQT,OAAOU,IAAIC,iBAAmBF,EAAM,UAElDT,OAAOU,IAAIC,iBAAmBF,EAE9Bd,EAAKS,kBAAkBK,GAEvBT,OAAOU,IAAIE,cACXjB,EAAKI,aAAc,EAEnBC,OAAOU,IAAIG,sBAAsB,WAE/BlB,EAAKI,aAAc,OAK3BK,kBApCM,SAoCYK,GAEhBb,KAAKY,sBACLZ,KAAKkB,WAAY,EACjBlB,KAAKmB,iBAAmBN,CACxB,IAAIO,GAAOpB,KAAKqB,WAAWrB,KAAKmB,iBAC5BC,IACFA,EAAKE,UAAUC,IAAI,UACnBH,EAAKE,UAAUE,OAAO,YAEtBxB,KAAKyB,yBAAwB,IAI7BzB,KAAKyB,yBAAwB,IAIjCb,oBAtDM,WAsDgB,GAAAc,GAAA1B,IAChBA,MAAKmB,mBACPnB,KAAKqB,WAAWrB,KAAKmB,kBAAkBG,UAAUE,OAAO,gBACjDxB,MAAKmB,kBAEVnB,KAAK2B,YACPC,aAAa5B,KAAK2B,YAEpB3B,KAAKkB,WAAY,EACjBlB,KAAK2B,WAAaE,WAAW,WAEtBH,EAAKR,WACRQ,EAAKI,4BAEN,MAGLA,yBAvEM,WAwEJ9B,KAAK2B,YAAa,EAClB3B,KAAKyB,yBAAwB,IAG/BA,wBA5EM,SA4EkBF,GAEtB,GAAIQ,GAASR,EAAM,MAAQ,QAC3BvB,MAAKC,UAAU+B,KAAK,SAACC,EAAOb,GAE1BA,EAAKE,UAAUS,GAAQ,eAI3BV,WArFM,SAqFKR,GACT,MAAOqB,UAASC,eAAe,WAAatB","file":"gv-map.min.js","sourcesContent":["Polymer({\n  is: 'gv-map',\n\n  // Wait all HTML to be loaded.\n  attached() {\n    this.$mapZones = $('#gv-map .mapZone');\n    this.hoverActive = true;\n    // Global ref.\n    window.gvmap = this;\n    // Bind events.\n    this.$mapZones\n      .on('mouseover', (e) => {\n        this.hoverActive && this.mapSelectBuilding(e.currentTarget.getAttribute('id').split('-')[1]);\n      })\n      .on('mouseout', (e) => {\n        this.hoverActive && this.mapDeselectBuilding(e.currentTarget.getAttribute('id').split('-')[1]);\n      })\n      // Click.\n      .on('click', (e) => {\n        let key = e.currentTarget.getAttribute('id').split('-')[1];\n        key = key !== window.gvc.buildingSelected ? key : 'partout';\n        // Set value to current select.\n        window.gvc.buildingSelected = key;\n        // Display.\n        this.mapSelectBuilding(key);\n        // Search.\n        window.gvc.searchEvent();\n        this.hoverActive = false;\n        // Scroll.\n        window.gvc.scrollToSearchResults(() => {\n          \"use strict\";\n          this.hoverActive = true;\n        });\n      });\n  },\n\n  mapSelectBuilding(key) {\n    // Deselect if already selected.\n    this.mapDeselectBuilding();\n    this.mapIsOver = true;\n    this.mapSelectCurrent = key;\n    let zone = this.mapGetZone(this.mapSelectCurrent);\n    if (zone) {\n      zone.classList.add('strong');\n      zone.classList.remove('discreet');\n      // Hide all.\n      this.mapSelectBuildingToggle(true);\n    }\n    else {\n      // Display all.\n      this.mapSelectBuildingToggle(false);\n    }\n  },\n\n  mapDeselectBuilding() {\n    if (this.mapSelectCurrent) {\n      this.mapGetZone(this.mapSelectCurrent).classList.remove('strong');\n      delete this.mapSelectCurrent;\n    }\n    if (this.mapTimeout) {\n      clearTimeout(this.mapTimeout);\n    }\n    this.mapIsOver = false;\n    this.mapTimeout = setTimeout(() => {\n      // Mouse is still not over.\n      if (!this.mapIsOver) {\n        this.mapDeselectBuildingReset();\n      }\n    }, 500);\n  },\n\n  mapDeselectBuildingReset() {\n    this.mapTimeout = false;\n    this.mapSelectBuildingToggle(false);\n  },\n\n  mapSelectBuildingToggle(add) {\n    // Define add or remove class.\n    var method = add ? 'add' : 'remove';\n    this.$mapZones.each((index, zone) => {\n      // On all paths.\n      zone.classList[method]('discreet');\n    });\n  },\n\n  mapGetZone(key) {\n    return document.getElementById('mapZone-' + key);\n  }\n});\n"]}