{"version":3,"sources":["web/front/src/gv-map/gv-map.js"],"names":["Polymer","is","properties","route","type","Object","observer","_routeChanged","this","updateVisibility","attached","_this","$gvMap","$","document","getElementById","$gvMapPins","$mapZones","find","hoverActive","domPins","window","gvmap","on","e","mapSelectBuilding","currentTarget","getAttribute","split","mapDeselectBuilding","key","gvc","buildingSelected","buildingSelectedAll","searchEvent","scrollToSearchResults","ready","GVCarto","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","keys","buildings","Symbol","iterator","next","done","buildingKey","value","pin","createElement","building","append","err","return","mapIsOver","mapSelectCurrent","zone","mapGetZone","classList","add","remove","mapSelectBuildingToggle","_this2","mapTimeout","clearTimeout","setTimeout","mapDeselectBuildingReset","method","each","index","mapShowBuildingPinAll","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","organizationCount","show","mapHideBuildingPinAll","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","hide","mapHideBuildingPin","mainComponent","get","addClass","removeClass"],"mappings":"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","file":"gv-map.min.js","sourcesContent":["Polymer({\n  is: 'gv-map',\n\n  properties: {\n    route: {\n      type: Object,\n      observer: '_routeChanged'\n    }\n  },\n\n  _routeChanged: function () {\n    this.updateVisibility();\n  },\n\n  // Wait all HTML to be loaded.\n  attached() {\n    this.$gvMap = $(document.getElementById('gv-map'));\n    this.$gvMapPins = $(document.getElementById('gv-map-pins'));\n    this.$mapZones = this.$gvMap.find('.mapZone');\n    this.hoverActive = true;\n    this.domPins = {};\n    // Global ref.\n    window.gvmap = this;\n    // Bind events.\n    this.$mapZones\n      .on('mouseover', (e) => {\n        this.hoverActive && this.mapSelectBuilding(e.currentTarget.getAttribute('id').split('-')[1]);\n      })\n      .on('mouseout', (e) => {\n        this.hoverActive && this.mapDeselectBuilding(e.currentTarget.getAttribute('id').split('-')[1]);\n      })\n      // Click.\n      .on('click', (e) => {\n        let key = e.currentTarget.getAttribute('id').split('-')[1];\n        key = key !== window.gvc.buildingSelected ? key : gvc.buildingSelectedAll;\n        // Set value to current select.\n        window.gvc.buildingSelected = key;\n        // Display.\n        this.mapSelectBuilding(key);\n        // Search.\n        window.gvc.searchEvent();\n        this.hoverActive = false;\n        // Scroll.\n        window.gvc.scrollToSearchResults(() => {\n          \"use strict\";\n          this.hoverActive = true;\n        });\n      });\n\n    this.ready = false;\n\n    // Wait for buildings to be loaded.\n    GVCarto.ready(() => {\n      \"use strict\";\n      this.ready = true;\n      // Create pins.\n      for (let buildingKey of Object.keys(gvc.buildings)) {\n        let pin = document.createElement('gv-map-pin');\n        pin.building = buildingKey;\n        this.$gvMapPins.append(pin);\n        this.domPins[buildingKey] = pin;\n      }\n      this.updateVisibility();\n    });\n  },\n\n  mapSelectBuilding(key) {\n    // Deselect if already selected.\n    this.mapDeselectBuilding();\n    this.mapIsOver = true;\n    gvc.buildingSelected =\n      this.mapSelectCurrent = key;\n    let zone = this.mapGetZone(this.mapSelectCurrent);\n    if (zone) {\n      zone.classList.add('strong');\n      zone.classList.remove('discreet');\n      // Hide all.\n      this.mapSelectBuildingToggle(true);\n    }\n    else {\n      // Display all.\n      this.mapSelectBuildingToggle(false);\n    }\n  },\n\n  mapDeselectBuilding() {\n    if (this.mapSelectCurrent) {\n      this.mapGetZone(this.mapSelectCurrent).classList.remove('strong');\n      delete this.mapSelectCurrent;\n    }\n    if (this.mapTimeout) {\n      clearTimeout(this.mapTimeout);\n    }\n    this.mapIsOver = false;\n    this.mapTimeout = setTimeout(() => {\n      // Mouse is still not over.\n      if (!this.mapIsOver) {\n        this.mapDeselectBuildingReset();\n      }\n    }, 500);\n  },\n\n  mapDeselectBuildingReset() {\n    this.mapTimeout = false;\n    this.mapSelectBuildingToggle(false);\n  },\n\n  mapSelectBuildingToggle(add) {\n    // Define add or remove class.\n    var method = add ? 'add' : 'remove';\n    this.$mapZones.each((index, zone) => {\n      // On all paths.\n      zone.classList[method]('discreet');\n    });\n  },\n\n  mapGetZone(key) {\n    return document.getElementById('mapZone-' + key);\n  },\n\n  mapShowBuildingPinAll() {\n    \"use strict\";\n    if (this.ready) {\n      for (let buildingKey of Object.keys(gvc.buildings)) {\n        if (gvc.buildings[buildingKey].organizationCount > 0) {\n          this.domPins[buildingKey].show(gvc.buildings[buildingKey].organizationCount);\n        }\n      }\n    }\n  },\n\n  mapHideBuildingPinAll() {\n    \"use strict\";\n    if (this.ready) {\n      for (let buildingKey of Object.keys(gvc.buildings)) {\n        this.domPins[buildingKey].hide();\n      }\n    }\n  },\n\n  mapHideBuildingPin(buildingKey) {\n    if (this.domPins[buildingKey]) {\n      this.domPins[buildingKey].hide();\n    }\n  },\n\n  updateVisibility() {\n    \"use strict\";\n    switch (gvc.mainComponent.get('route.path').split('/')[1]) {\n      case 'detail':\n        // Hide.\n        this.$gvMap.addClass('fadeOut').removeClass('fadeIn');\n        break;\n      default:\n        // Show.\n        this.$gvMap.addClass('fadeIn').removeClass('fadeOut');\n        break;\n    }\n  }\n});\n"]}