{"version":3,"sources":["web/front/src/gv-map/gv-map.js"],"names":["Polymer","is","properties","route","type","Object","observer","pins","Array","value","pinsRegistry","_routeChanged","this","updateVisibility","attached","ready","$gvMap","$","document","getElementById","$gvMapPins","$mapZones","find","hoverActive","domPins","gvc","map","GVCarto","start","bind","_this","each","buildings","building","push","on","e","buildingHighlight","currentTarget","getAttribute","split","buildingHighlightOff","key","buildingSelect","window","scrollToSearchResults","mapIsOver","buildingHighlighted","zone","zoneGet","classList","add","remove","buildingHideAll","_this2","mapTimeout","clearTimeout","setTimeout","buildingHighlightReset","activate","method","index","buildingSelected","buildingSelectedAll","$$","results","searchRender","pinShow","text","show","pinHide","hide"],"mappings":"YAAAA,UACEC,GAAI,SAEJC,YACEC,OACEC,KAAMC,OACNC,SAAU,iBAEZC,MACEH,KAAMI,MACNC,UAEFC,cACEN,KAAMC,OACNI,WAIJE,cAAe,WACbC,KAAKC,oBAIPC,SAvBM,WAwBJF,KAAKG,OAAQ,EACbH,KAAKI,OAASC,EAAEC,SAASC,eAAe,WACxCP,KAAKQ,WAAaH,EAAEC,SAASC,eAAe,gBAC5CP,KAAKS,UAAYT,KAAKI,OAAOM,KAAK,YAClCV,KAAKW,aAAc,EACnBX,KAAKY,WAGLC,IAAIC,IAAMd,KAGVe,QAAQZ,MAAMH,KAAKgB,MAAMC,KAAKjB,OAE9Be,QAAQZ,MAAM,eAOhBa,MA5CM,WA4CE,GAAAE,GAAAlB,KAKFL,IACJU,GAAEc,KAAKN,IAAIO,UAAW,SAACC,GACrB1B,EAAK2B,KAAKD,KAEZrB,KAAKL,KAAOA,EAGZK,KAAKS,UACFc,GAAG,YAAa,SAACC,GAChBN,EAAKP,aAAeO,EAAKO,kBAAkBD,EAAEE,cAAcC,aAAa,MAAMC,MAAM,KAAK,MAE1FL,GAAG,WAAY,SAACC,GACfN,EAAKP,aAAeO,EAAKW,qBAAqBL,EAAEE,cAAcC,aAAa,MAAMC,MAAM,KAAK,MAG7FL,GAAG,QAAS,SAACC,GACZ,GAAIM,GAAMN,EAAEE,cAAcC,aAAa,MAAMC,MAAM,KAAK,EAExDV,GAAKa,eAAeD,GAEpBZ,EAAKP,aAAc,EAEnBqB,OAAOnB,IAAIoB,sBAAsB,WAE/Bf,EAAKP,aAAc,OAK3Bc,kBA9EM,SA8EYK,GAEhB9B,KAAK6B,uBACL7B,KAAKkC,WAAY,EACjBlC,KAAKmC,oBAAsBL,CAC3B,IAAIM,GAAOpC,KAAKqC,QAAQrC,KAAKmC,oBACzBC,IACFA,EAAKE,UAAUC,IAAI,UACnBH,EAAKE,UAAUE,OAAO,YAEtBxC,KAAKyC,iBAAgB,IAIrBzC,KAAKyC,iBAAgB,IAIzBZ,qBAhGM,WAgGiB,GAAAa,GAAA1C,IACjBA,MAAKmC,sBACPnC,KAAKqC,QAAQrC,KAAKmC,qBAAqBG,UAAUE,OAAO,gBACjDxC,MAAKmC,qBAEVnC,KAAK2C,YACPC,aAAa5C,KAAK2C,YAEpB3C,KAAKkC,WAAY,EACjBlC,KAAK2C,WAAaE,WAAW,WAEtBH,EAAKR,WACRQ,EAAKI,0BAEN,MAGLA,uBAjHM,WAkHJ9C,KAAK2C,YAAa,EAClB3C,KAAKyC,iBAAgB,IAGvBA,gBAtHM,SAsHUM,GAEd,GAAIC,GAASD,EAAW,MAAQ,QAChC/C,MAAKS,UAAUU,KAAK,SAAC8B,EAAOb,GAE1BA,EAAKE,UAAUU,GAAQ,eAI3BjB,eA/HM,SA+HSV,GAETR,IAAIqC,kBAAoBrC,IAAIqC,kBAAoBrC,IAAIsC,qBAEtDnD,KAAKF,aAAae,IAAIqC,kBAAkBE,GAAG,uBAAuBd,UAAUE,OAAO,YAErF3B,IAAIqC,iBAAmB7B,GAAYR,IAAIsC,oBACnC9B,GAEFrB,KAAKF,aAAauB,GAAU+B,GAAG,uBAAuBd,UAAUC,IAAI,YAGtE1B,IAAIwC,QAAQC,gBAGdjB,QA9IM,SA8IEP,GACN,MAAOxB,UAASC,eAAe,WAAauB,IAG9CyB,QAlJM,SAkJElC,EAAUmC,GAEhBxD,KAAKF,aAAauB,GAAUoC,KAAKD,IAGnCE,QAvJM,SAuJErC,GAENrB,KAAKF,aAAauB,GAAUsC","file":"gv-map.min.js","sourcesContent":["Polymer({\r\n  is: 'gv-map',\r\n\r\n  properties: {\r\n    route: {\r\n      type: Object,\r\n      observer: '_routeChanged'\r\n    },\r\n    pins: {\r\n      type: Array,\r\n      value: []\r\n    },\r\n    pinsRegistry: {\r\n      type: Object,\r\n      value: {}\r\n    }\r\n  },\r\n\r\n  _routeChanged: function () {\r\n    this.updateVisibility();\r\n  },\r\n\r\n  // Wait all HTML to be loaded.\r\n  attached() {\r\n    this.ready = false;\r\n    this.$gvMap = $(document.getElementById('gv-map'));\r\n    this.$gvMapPins = $(document.getElementById('gv-map-pins'));\r\n    this.$mapZones = this.$gvMap.find('.mapZone');\r\n    this.hoverActive = true;\r\n    this.domPins = {};\r\n\r\n    // Global ref.\r\n    gvc.map = this;\r\n\r\n    // Wait for buildings to be loaded.\r\n    GVCarto.ready(this.start.bind(this));\r\n\r\n    GVCarto.ready(() => {\r\n      //  \"use strict\";\r\n\r\n      //this.updateVisibility();\r\n    });\r\n  },\r\n\r\n  start() {\r\n    \"use strict\";\r\n    // TODO  this.ready = true;\r\n\r\n    // Create pins.\r\n    let pins = [];\r\n    $.each(gvc.buildings, (building) => {\r\n      pins.push(building);\r\n    });\r\n    this.pins = pins;\r\n\r\n    // Bind events.\r\n    this.$mapZones\r\n      .on('mouseover', (e) => {\r\n        this.hoverActive && this.buildingHighlight(e.currentTarget.getAttribute('id').split('-')[1]);\r\n      })\r\n      .on('mouseout', (e) => {\r\n        this.hoverActive && this.buildingHighlightOff(e.currentTarget.getAttribute('id').split('-')[1]);\r\n      })\r\n      // Click.\r\n      .on('click', (e) => {\r\n        let key = e.currentTarget.getAttribute('id').split('-')[1];\r\n        // Launch search.\r\n        this.buildingSelect(key);\r\n        // Disable hover temporally.\r\n        this.hoverActive = false;\r\n        // Scroll.\r\n        window.gvc.scrollToSearchResults(() => {\r\n          \"use strict\";\r\n          this.hoverActive = true;\r\n        });\r\n      });\r\n  },\r\n\r\n  buildingHighlight(key) {\r\n    // Deselect if already selected.\r\n    this.buildingHighlightOff();\r\n    this.mapIsOver = true;\r\n    this.buildingHighlighted = key;\r\n    let zone = this.zoneGet(this.buildingHighlighted);\r\n    if (zone) {\r\n      zone.classList.add('strong');\r\n      zone.classList.remove('discreet');\r\n      // Hide all.\r\n      this.buildingHideAll(true);\r\n    }\r\n    else {\r\n      // Display all.\r\n      this.buildingHideAll(false);\r\n    }\r\n  },\r\n\r\n  buildingHighlightOff() {\r\n    if (this.buildingHighlighted) {\r\n      this.zoneGet(this.buildingHighlighted).classList.remove('strong');\r\n      delete this.buildingHighlighted;\r\n    }\r\n    if (this.mapTimeout) {\r\n      clearTimeout(this.mapTimeout);\r\n    }\r\n    this.mapIsOver = false;\r\n    this.mapTimeout = setTimeout(() => {\r\n      // Mouse is still not over.\r\n      if (!this.mapIsOver) {\r\n        this.buildingHighlightReset();\r\n      }\r\n    }, 500);\r\n  },\r\n\r\n  buildingHighlightReset() {\r\n    this.mapTimeout = false;\r\n    this.buildingHideAll(false);\r\n  },\r\n\r\n  buildingHideAll(activate) {\r\n    // Define add or remove class.\r\n    var method = activate ? 'add' : 'remove';\r\n    this.$mapZones.each((index, zone) => {\r\n      // On all paths.\r\n      zone.classList[method]('discreet');\r\n    });\r\n  },\r\n\r\n  buildingSelect(building) {\r\n    \"use strict\";\r\n    if (gvc.buildingSelected && gvc.buildingSelected != gvc.buildingSelectedAll) {\r\n      // Hid pin.\r\n      this.pinsRegistry[gvc.buildingSelected].$$('.gv-map-pin-wrapper').classList.remove('selected');\r\n    }\r\n    gvc.buildingSelected = building || gvc.buildingSelectedAll;\r\n    if (building) {\r\n      // Show cross.\r\n      this.pinsRegistry[building].$$('.gv-map-pin-wrapper').classList.add('selected');\r\n    }\r\n    // We don't need to reload all results.\r\n    gvc.results.searchRender();\r\n  },\r\n\r\n  zoneGet(key) {\r\n    return document.getElementById('mapZone-' + key);\r\n  },\r\n\r\n  pinShow(building, text) {\r\n    \"use strict\";\r\n    this.pinsRegistry[building].show(text);\r\n  },\r\n\r\n  pinHide(building) {\r\n    \"use strict\";\r\n    this.pinsRegistry[building].hide();\r\n  }\r\n\r\n  //mapShowBuildingPinAll() {\r\n  //  \"use strict\";\r\n  //  if (this.ready) {\r\n  //    for (let buildingKey of Object.keys(gvc.buildings)) {\r\n  //      if (gvc.buildings[buildingKey].organizationCount > 0) {\r\n  //        this.domPins[buildingKey].show(gvc.buildings[buildingKey].organizationCount);\r\n  //      }\r\n  //    }\r\n  //  }\r\n  //},\r\n  //\r\n  //mapHideBuildingPinAll() {\r\n  //  \"use strict\";\r\n  //  if (this.ready) {\r\n  //    for (let buildingKey of Object.keys(gvc.buildings)) {\r\n  //      this.domPins[buildingKey].hide();\r\n  //    }\r\n  //  }\r\n  //},\r\n  //\r\n  //mapHideBuildingPin(buildingKey) {\r\n  //  if (this.domPins[buildingKey]) {\r\n  //    this.domPins[buildingKey].hide();\r\n  //  }\r\n  //},\r\n  //\r\n  //updateVisibility() {\r\n  //  \"use strict\";\r\n  //  switch (gvc.mainComponent.get('route.path').split('/')[1]) {\r\n  //    case 'detail':\r\n  //      // Hide.\r\n  //      this.$gvMap.addClass('fadeOut').removeClass('fadeIn');\r\n  //      break;\r\n  //    default:\r\n  //      // Show.\r\n  //      this.$gvMap.addClass('fadeIn').removeClass('fadeOut');\r\n  //      break;\r\n  //  }\r\n  //}\r\n});\r\n"]}