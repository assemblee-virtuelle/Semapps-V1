{"version":3,"sources":["web/front/src/gv-map/gv-map.js"],"names":["Polymer","is","attached","_this","this","$mapZones","$","on","e","mapSelectBuilding","currentTarget","getAttribute","split","mapDeselectBuilding","window","gvc","buildingSelected","searchEvent","scrollToSearch","key","mapIsOver","mapSelectCurrent","zone","mapGetZone","classList","add","remove","mapSelectBuildingToggle","_this2","mapTimeout","clearTimeout","setTimeout","mapDeselectBuildingReset","method","each","index","document","getElementById"],"mappings":"YAAAA,UACEC,GAAI,SAEJC,SAHM,WAGK,GAAAC,GAAAC,IACTA,MAAKC,UAAYC,EAAE,oBAGnBF,KAAKC,UACFE,GAAG,YAAa,SAACC,GAChBL,EAAKM,kBAAkBD,EAAEE,cAAcC,aAAa,MAAMC,MAAM,KAAK,MAEtEL,GAAG,WAAY,SAACC,GACfL,EAAKU,oBAAoBL,EAAEE,cAAcC,aAAa,MAAMC,MAAM,KAAK,MAGxEL,GAAG,QAAS,SAACC,GAEZM,OAAOC,IAAIC,iBAAmBR,EAAEE,cAAcC,aAAa,MAAMC,MAAM,KAAK,GAE5EE,OAAOC,IAAIE,cAEXH,OAAOC,IAAIG,oBAIjBT,kBAzBM,SAyBYU,GAChBf,KAAKgB,WAAY,EACjBhB,KAAKiB,iBAAmBF,CACxB,IAAIG,GAAOlB,KAAKmB,WAAWnB,KAAKiB,iBAC5BC,KACFA,EAAKE,UAAUC,IAAI,UACnBH,EAAKE,UAAUE,OAAO,YACtBtB,KAAKuB,yBAAwB,KAIjCd,oBApCM,WAoCgB,GAAAe,GAAAxB,IAChBA,MAAKiB,mBACPjB,KAAKmB,WAAWnB,KAAKiB,kBAAkBG,UAAUE,OAAO,gBACjDtB,MAAKiB,kBAEVjB,KAAKyB,YACPC,aAAa1B,KAAKyB,YAEpBzB,KAAKgB,WAAY,EACjBhB,KAAKyB,WAAaE,WAAW,WAEtBH,EAAKR,WACRQ,EAAKI,4BAEN,MAGLA,yBArDM,WAsDJ5B,KAAKyB,YAAa,EAClBzB,KAAKuB,yBAAwB,IAG/BA,wBA1DM,SA0DkBF,GAEtB,GAAIQ,GAASR,EAAM,MAAQ,QAC3BrB,MAAKC,UAAU6B,KAAK,SAACC,EAAOb,GAE1BA,EAAKE,UAAUS,GAAQ,eAI3BV,WAnEM,SAmEKJ,GACT,MAAOiB,UAASC,eAAe,WAAalB","file":"gv-map.min.js","sourcesContent":["Polymer({\n  is: 'gv-map',\n  // Wait all HTML to be loaded.\n  attached() {\n    this.$mapZones = $('#gv-map .mapZone');\n\n    // Bind events.\n    this.$mapZones\n      .on('mouseover', (e) => {\n        this.mapSelectBuilding(e.currentTarget.getAttribute('id').split('-')[1]);\n      })\n      .on('mouseout', (e) => {\n        this.mapDeselectBuilding(e.currentTarget.getAttribute('id').split('-')[1]);\n      })\n      // Click.\n      .on('click', (e) => {\n        // Set value to current select.\n        window.gvc.buildingSelected = e.currentTarget.getAttribute('id').split('-')[1];\n        // Search.\n        window.gvc.searchEvent();\n        // Scroll.\n        window.gvc.scrollToSearch();\n      });\n  },\n\n  mapSelectBuilding(key) {\n    this.mapIsOver = true;\n    this.mapSelectCurrent = key;\n    let zone = this.mapGetZone(this.mapSelectCurrent);\n    if (zone) {\n      zone.classList.add('strong');\n      zone.classList.remove('discreet');\n      this.mapSelectBuildingToggle(true);\n    }\n  },\n\n  mapDeselectBuilding() {\n    if (this.mapSelectCurrent) {\n      this.mapGetZone(this.mapSelectCurrent).classList.remove('strong');\n      delete this.mapSelectCurrent;\n    }\n    if (this.mapTimeout) {\n      clearTimeout(this.mapTimeout);\n    }\n    this.mapIsOver = false;\n    this.mapTimeout = setTimeout(() => {\n      // Mouse is still not over.\n      if (!this.mapIsOver) {\n        this.mapDeselectBuildingReset();\n      }\n    }, 500);\n  },\n\n  mapDeselectBuildingReset() {\n    this.mapTimeout = false;\n    this.mapSelectBuildingToggle(false);\n  },\n\n  mapSelectBuildingToggle(add) {\n    // Define add or remove class.\n    var method = add ? 'add' : 'remove';\n    this.$mapZones.each((index, zone) => {\n      // On all paths.\n      zone.classList[method]('discreet');\n    });\n  },\n\n  mapGetZone(key) {\n    return document.getElementById('mapZone-' + key);\n  }\n});\n"]}