{"version":3,"sources":["web/front/src/gv-map/gv-map.js"],"names":["Polymer","is","properties","route","type","Object","observer","pins","Array","value","pinsRegistry","_routeChanged","this","updateVisibility","attached","ready","$gvMap","$","document","getElementById","$mapZones","find","hoverActive","gvc","map","GVCarto","start","bind","_this","each","buildings","building","push","on","e","buildingHighlight","currentTarget","getAttribute","split","buildingHighlightOff","key","buildingClick","window","scrollToSearchResults","buildingSelect","buildingSelected","mapIsOver","buildingHighlighted","zone","zoneGet","classList","add","remove","buildingHideAll","_this2","mapTimeout","clearTimeout","setTimeout","buildingHighlightReset","activate","method","index","domSearchTextInput","reloadSearch","deselect","selected","buildingSelectedAll","select","goSearch","pinShow","text","show","pinHide","hide"],"mappings":"YAAAA,UACEC,GAAI,SAEJC,YACEC,OACEC,KAAMC,OACNC,SAAU,iBAEZC,MACEH,KAAMI,MACNC,UAEFC,cACEN,KAAMC,OACNI,WAIJE,cAAe,WACbC,KAAKC,oBAIPC,SAvBM,WAwBJF,KAAKG,OAAQ,EACbH,KAAKI,OAASC,EAAEC,SAASC,eAAe,WACxCP,KAAKQ,UAAYR,KAAKI,OAAOK,KAAK,YAClCT,KAAKU,aAAc,EAGnBC,IAAIC,IAAMZ,KAGVa,QAAQV,MAAMH,KAAKc,MAAMC,KAAKf,QAGhCc,MApCM,WAoCE,GAAAE,GAAAhB,KAIFL,IACJU,GAAEY,KAAKN,IAAIO,UAAW,SAACC,GACrBxB,EAAKyB,KAAKD,KAEZnB,KAAKL,KAAOA,EAGZK,KAAKQ,UACFa,GAAG,YAAa,SAACC,GAChBN,EAAKN,aAAeM,EAAKO,kBAAkBD,EAAEE,cAAcC,aAAa,MAAMC,MAAM,KAAK,MAE1FL,GAAG,WAAY,SAACC,GACfN,EAAKN,aAAeM,EAAKW,qBAAqBL,EAAEE,cAAcC,aAAa,MAAMC,MAAM,KAAK,MAG7FL,GAAG,QAAS,SAACC,GACZ,GAAIM,GAAMN,EAAEE,cAAcC,aAAa,MAAMC,MAAM,KAAK,EAExDV,GAAKa,cAAcD,GAEnBZ,EAAKN,aAAc,EAEnBoB,OAAOnB,IAAIoB,sBAAsB,WAE/Bf,EAAKN,aAAc,MAIzBV,KAAKgC,eAAerB,IAAIsB,kBAAkB,IAG5CV,kBAvEM,SAuEYK,GAEhB5B,KAAK2B,uBACL3B,KAAKkC,WAAY,EACjBlC,KAAKmC,oBAAsBP,CAC3B,IAAIQ,GAAOpC,KAAKqC,QAAQrC,KAAKmC,oBACzBC,IACFA,EAAKE,UAAUC,IAAI,UACnBH,EAAKE,UAAUE,OAAO,YAEtBxC,KAAKyC,iBAAgB,IAIrBzC,KAAKyC,iBAAgB,IAIzBd,qBAzFM,WAyFiB,GAAAe,GAAA1C,IACjBA,MAAKmC,sBACPnC,KAAKqC,QAAQrC,KAAKmC,qBAAqBG,UAAUE,OAAO,gBACjDxC,MAAKmC,qBAEVnC,KAAK2C,YACPC,aAAa5C,KAAK2C,YAEpB3C,KAAKkC,WAAY,EACjBlC,KAAK2C,WAAaE,WAAW,WAEtBH,EAAKR,WACRQ,EAAKI,0BAEN,MAGLA,uBA1GM,WA2GJ9C,KAAK2C,YAAa,EAClB3C,KAAKyC,iBAAgB,IAGvBA,gBA/GM,SA+GUM,GAEd,GAAIC,GAASD,EAAW,MAAQ,QAChC/C,MAAKQ,UAAUS,KAAK,SAACgC,EAAOb,GAE1BA,EAAKE,UAAUU,GAAQ,eAI3BnB,cAxHM,SAwHQV,GAGZR,IAAIuC,mBAAmBrD,MAAQ,GAC/Bc,IAAIC,IAAIoB,eAAeb,IAGzBa,eA/HM,SA+HSb,EAAUgC,GAGvBnD,KAAKF,aAAaa,IAAIsB,mBAAqBjC,KAAKF,aAAaa,IAAIsB,kBAAkBmB,UACnF,IAAIC,GACF1C,IAAIsB,iBAAmBd,GAAYR,IAAI2C,mBAEzCtD,MAAKF,aAAauD,IAAarD,KAAKF,aAAauD,GAAUE,SAE1DJ,KAAiB,GAAUxC,IAAI6C,YAGlCnB,QA3IM,SA2IET,GACN,MAAOtB,UAASC,eAAe,WAAaqB,IAG9C6B,QA/IM,SA+IEtC,EAAUuC,GAEhB1D,KAAKF,aAAaqB,GAAUwC,KAAKD,IAGnCE,QApJM,SAoJEzC,GAENnB,KAAKF,aAAaqB,GAAU0C","file":"gv-map.min.js","sourcesContent":["Polymer({\r\n  is: 'gv-map',\r\n\r\n  properties: {\r\n    route: {\r\n      type: Object,\r\n      observer: '_routeChanged'\r\n    },\r\n    pins: {\r\n      type: Array,\r\n      value: []\r\n    },\r\n    pinsRegistry: {\r\n      type: Object,\r\n      value: {}\r\n    }\r\n  },\r\n\r\n  _routeChanged: function () {\r\n    this.updateVisibility();\r\n  },\r\n\r\n  // Wait all HTML to be loaded.\r\n  attached() {\r\n    this.ready = false;\r\n    this.$gvMap = $(document.getElementById('gv-map'));\r\n    this.$mapZones = this.$gvMap.find('.mapZone');\r\n    this.hoverActive = true;\r\n\r\n    // Global ref.\r\n    gvc.map = this;\r\n\r\n    // Wait for buildings to be loaded.\r\n    GVCarto.ready(this.start.bind(this));\r\n  },\r\n\r\n  start() {\r\n    \"use strict\";\r\n\r\n    // Create pins.\r\n    let pins = [];\r\n    $.each(gvc.buildings, (building) => {\r\n      pins.push(building);\r\n    });\r\n    this.pins = pins;\r\n\r\n    // Bind events.\r\n    this.$mapZones\r\n      .on('mouseover', (e) => {\r\n        this.hoverActive && this.buildingHighlight(e.currentTarget.getAttribute('id').split('-')[1]);\r\n      })\r\n      .on('mouseout', (e) => {\r\n        this.hoverActive && this.buildingHighlightOff(e.currentTarget.getAttribute('id').split('-')[1]);\r\n      })\r\n      // Click.\r\n      .on('click', (e) => {\r\n        let key = e.currentTarget.getAttribute('id').split('-')[1];\r\n        // Launch search.\r\n        this.buildingClick(key);\r\n        // Disable hover temporally.\r\n        this.hoverActive = false;\r\n        // Scroll.\r\n        window.gvc.scrollToSearchResults(() => {\r\n          \"use strict\";\r\n          this.hoverActive = true;\r\n        });\r\n      });\r\n\r\n    this.buildingSelect(gvc.buildingSelected, false);\r\n  },\r\n\r\n  buildingHighlight(key) {\r\n    // Deselect if already selected.\r\n    this.buildingHighlightOff();\r\n    this.mapIsOver = true;\r\n    this.buildingHighlighted = key;\r\n    let zone = this.zoneGet(this.buildingHighlighted);\r\n    if (zone) {\r\n      zone.classList.add('strong');\r\n      zone.classList.remove('discreet');\r\n      // Hide all.\r\n      this.buildingHideAll(true);\r\n    }\r\n    else {\r\n      // Display all.\r\n      this.buildingHideAll(false);\r\n    }\r\n  },\r\n\r\n  buildingHighlightOff() {\r\n    if (this.buildingHighlighted) {\r\n      this.zoneGet(this.buildingHighlighted).classList.remove('strong');\r\n      delete this.buildingHighlighted;\r\n    }\r\n    if (this.mapTimeout) {\r\n      clearTimeout(this.mapTimeout);\r\n    }\r\n    this.mapIsOver = false;\r\n    this.mapTimeout = setTimeout(() => {\r\n      // Mouse is still not over.\r\n      if (!this.mapIsOver) {\r\n        this.buildingHighlightReset();\r\n      }\r\n    }, 500);\r\n  },\r\n\r\n  buildingHighlightReset() {\r\n    this.mapTimeout = false;\r\n    this.buildingHideAll(false);\r\n  },\r\n\r\n  buildingHideAll(activate) {\r\n    // Define add or remove class.\r\n    var method = activate ? 'add' : 'remove';\r\n    this.$mapZones.each((index, zone) => {\r\n      // On all paths.\r\n      zone.classList[method]('discreet');\r\n    });\r\n  },\r\n\r\n  buildingClick(building) {\r\n    \"use strict\";\r\n    // Do not allow building selection and search term in the same time.\r\n    gvc.domSearchTextInput.value = '';\r\n    gvc.map.buildingSelect(building);\r\n  },\r\n\r\n  buildingSelect(building, reloadSearch) {\r\n    \"use strict\";\r\n    // Deselect current.\r\n    this.pinsRegistry[gvc.buildingSelected] && this.pinsRegistry[gvc.buildingSelected].deselect();\r\n    let selected =\r\n      gvc.buildingSelected = building || gvc.buildingSelectedAll;\r\n    // Select new one.\r\n    this.pinsRegistry[selected] && this.pinsRegistry[selected].select();\r\n    // Reload by default.\r\n    (reloadSearch !== false) && gvc.goSearch();\r\n  },\r\n\r\n  zoneGet(key) {\r\n    return document.getElementById('mapZone-' + key);\r\n  },\r\n\r\n  pinShow(building, text) {\r\n    \"use strict\";\r\n    this.pinsRegistry[building].show(text);\r\n  },\r\n\r\n  pinHide(building) {\r\n    \"use strict\";\r\n    this.pinsRegistry[building].hide();\r\n  }\r\n});\r\n"]}