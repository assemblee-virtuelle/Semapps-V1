{"version":3,"sources":["web/front/src/gv-logo-animated/gv-logo-animated.js"],"names":["Polymer","is","ready","this","pathCounter","styleSheet","document","createElement","head","appendChild","animatePaths","animatePathShadowItem","bind","selector","animation","delay","paths","querySelectorAll","animationDelay","animationIsFunction","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","path","value","length","getTotalLength","style","strokeDasharray","strokeDashoffset","err","return","sheet","insertRule","cssRules","rules"],"mappings":"YAAAA,UACEC,GAAI,mBAEJC,MAAO,WACLC,KAAKC,YAAc,EACnBD,KAAKE,WAAaC,SAASC,cAAc,SACzCD,SAASE,KAAKC,YAAYN,KAAKE,YAC/BF,KAAKO,aAAa,aAAc,sDAAuD,KACvFP,KAAKO,aAAa,eAAgBP,KAAKQ,sBAAsBC,KAAKT,MAAO,MAG3EO,aAAc,SAAUG,EAAUC,EAAWC,GAC3C,GAAIC,GAAQb,KAAKc,iBAAiBJ,GAC9BK,EAAiB,EACjBC,EAA2C,kBAAdL,GAHiBM,GAAA,EAAAC,GAAA,EAAAC,EAAAC,MAAA,KAIlD,IAAA,GAAAC,GAAAC,EAAiBT,EAAjBU,OAAAC,cAAAP,GAAAI,EAAAC,EAAAG,QAAAC,MAAAT,GAAA,EAAwB,CAAA,GAAfU,GAAeN,EAAAO,MAClBC,EAASF,EAAKG,gBAClBH,GAAKI,MAAMC,gBAAkBH,EAC7BF,EAAKI,MAAME,iBAAmBJ,EAC1Bb,EACFL,EAAUgB,EAAME,GAGhBF,EAAKI,MAAMpB,UAAYA,EAEzBgB,EAAKI,MAAMhB,eAAiBA,EAAiB,IAC7CA,GAAkBH,GAf8B,MAAAsB,GAAAhB,GAAA,EAAAC,EAAAe,EAAA,QAAA,KAAAjB,GAAAK,EAAAa,QAAAb,EAAAa,SAAA,QAAA,GAAAjB,EAAA,KAAAC,MAmBpDX,sBAAuB,SAAUmB,EAAME,GACrC,GAAIO,GAAQpC,KAAKE,WAAWkC,KAC5BA,GAAMC,WAAW,2CACuBrC,KAAKC,YAAc,8DAEtB4B,EAAS,8JAMRA,EAAS,+CAGnCO,EAAME,UAAYF,EAAMG,OAAOV,QAC3CF,EAAKI,MAAMpB,UAAY,oBAAsBX,KAAKC,YAAc,2CAChED,KAAKC","file":"gv-logo-animated.min.js","sourcesContent":["Polymer({\n  is: 'gv-logo-animated',\n\n  ready: function () {\n    this.pathCounter = 0;\n    this.styleSheet = document.createElement('style');\n    document.head.appendChild(this.styleSheet);\n    this.animatePaths('#TEXT path', 'displayPath 1s cubic-bezier(.36,.34,.29,1) forwards', 0.08);\n    this.animatePaths('#SHADOW path', this.animatePathShadowItem.bind(this), 0.05);\n  },\n\n  animatePaths: function (selector, animation, delay) {\n    var paths = this.querySelectorAll(selector);\n    var animationDelay = 0;\n    var animationIsFunction = typeof animation === 'function';\n    for (var path of paths) {\n      var length = path.getTotalLength();\n      path.style.strokeDasharray = length;\n      path.style.strokeDashoffset = length;\n      if (animationIsFunction) {\n        animation(path, length);\n      }\n      else {\n        path.style.animation = animation;\n      }\n      path.style.animationDelay = animationDelay + 's';\n      animationDelay += delay;\n    }\n  },\n\n  animatePathShadowItem: function (path, length) {\n    let sheet = this.styleSheet.sheet;\n    sheet.insertRule('\\\n            @keyframes displayPathShadow' + this.pathCounter + ' {\\\n                0% {\\\n                  stroke-dashoffset: ' + length + ';\\\n                }\\\n                50% {\\\n                  stroke-dashoffset: 0;\\\n                }\\\n                100% {\\\n                  stroke-dashoffset: ' + -length + ';\\\n                }\\\n            }\\\n            ', (sheet.cssRules || sheet.rules).length);\n    path.style.animation = 'displayPathShadow' + this.pathCounter + ' 1s cubic-bezier(.36,.34,.29,1) forwards';\n    this.pathCounter++;\n  }\n});\n"]}